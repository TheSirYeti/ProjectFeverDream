//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 accumBufferAdd[1];
.global .align 1 .b8 accumBufferLerp[1];
.global .align 1 .b8 GBufferPos[1];
.global .align 1 .b8 GBufferNormal[1];
.global .align 1 .b8 GBufferAtten[1];
.global .align 1 .b8 colorOutput[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 1 .b8 globalLights[1];
.global .align 1 .b8 localLights[1];
.global .align 1 .b8 localLightIndices[1];
.global .align 4 .u32 tileCubemap;
.global .align 4 .b8 cameraRht[12];
.global .align 4 .b8 cameraUp[12];
.global .align 4 .b8 cameraFwd[12];
.global .align 4 .b8 cameraPos[12];
.global .align 4 .f32 cameraFov;
.global .align 4 .f32 cameraExp;
.global .align 4 .f32 integration;
.global .align 4 .u32 finalBounceFlag;
.global .align 4 .u32 bounceFlag;
.global .align 16 .b8 rndOffset[16];
.global .align 4 .u32 firstSkylight;
.global .align 4 .f32 backFaceWeight;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11tileCubemapE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraRhtE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8cameraUpE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraFwdE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraFovE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraExpE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11integrationE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15finalBounceFlagE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10bounceFlagE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9rndOffsetE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13firstSkylightE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14backFaceWeightE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename11tileCubemapE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraRhtE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8cameraUpE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraFwdE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraFovE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraExpE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11integrationE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename15finalBounceFlagE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename10bounceFlagE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9rndOffsetE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename13firstSkylightE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14backFaceWeightE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11tileCubemapE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraRhtE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8cameraUpE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraFwdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraFovE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraExpE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11integrationE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15finalBounceFlagE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10bounceFlagE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9rndOffsetE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13firstSkylightE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14backFaceWeightE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11tileCubemapE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraRhtE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8cameraUpE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraFwdE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraFovE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraExpE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11integrationE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15finalBounceFlagE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10bounceFlagE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9rndOffsetE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13firstSkylightE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14backFaceWeightE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11tileCubemapE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraRhtE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8cameraUpE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraFwdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraFovE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraExpE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11integrationE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15finalBounceFlagE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10bounceFlagE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9rndOffsetE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13firstSkylightE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14backFaceWeightE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[60];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<140>;
	.reg .b16 	%rs<14>;
	.reg .f32 	%f<1151>;
	.reg .b32 	%r<745>;
	.reg .b64 	%rd<248>;


	mov.u64 	%rd247, __local_depot0;
	cvta.local.u64 	%SP, %rd247;
	ld.global.v2.u32 	{%r226, %r227}, [pixelID];
	ld.global.v4.u32 	{%r229, %r230, %r231, %r232}, [rndOffset];
	add.s32 	%r234, %r229, %r226;
	and.b32  	%r235, %r234, 255;
	add.s32 	%r238, %r230, %r227;
	and.b32  	%r239, %r238, 255;
	add.s32 	%r241, %r231, %r226;
	and.b32  	%r242, %r241, 255;
	add.s32 	%r244, %r232, %r227;
	and.b32  	%r245, %r244, 255;
	cvt.u64.u32	%rd56, %r235;
	cvt.u64.u32	%rd57, %r239;
	mov.u64 	%rd72, rnd_seeds;
	cvta.global.u64 	%rd43, %rd72;
	mov.u32 	%r224, 2;
	mov.u32 	%r225, 3;
	mov.u64 	%rd240, 0;
	// inline asm
	call (%rd42), _rt_buffer_get_64, (%rd43, %r224, %r225, %rd56, %rd57, %rd240, %rd240);
	// inline asm
	ld.u8 	%rs4, [%rd42];
	cvt.rn.f32.u16	%f361, %rs4;
	div.rn.f32 	%f1, %f361, 0f437F0000;
	// inline asm
	call (%rd48), _rt_buffer_get_64, (%rd43, %r224, %r225, %rd56, %rd57, %rd240, %rd240);
	// inline asm
	ld.u8 	%rs5, [%rd48+1];
	cvt.rn.f32.u16	%f362, %rs5;
	div.rn.f32 	%f2, %f362, 0f437F0000;
	// inline asm
	call (%rd54), _rt_buffer_get_64, (%rd43, %r224, %r225, %rd56, %rd57, %rd240, %rd240);
	// inline asm
	ld.u8 	%rs6, [%rd54+2];
	cvt.rn.f32.u16	%f363, %rs6;
	div.rn.f32 	%f3, %f363, 0f437F0000;
	cvt.u64.u32	%rd68, %r242;
	cvt.u64.u32	%rd69, %r245;
	// inline asm
	call (%rd60), _rt_buffer_get_64, (%rd43, %r224, %r225, %rd68, %rd69, %rd240, %rd240);
	// inline asm
	ld.u8 	%rs1, [%rd60];
	// inline asm
	call (%rd66), _rt_buffer_get_64, (%rd43, %r224, %r225, %rd68, %rd69, %rd240, %rd240);
	// inline asm
	ld.global.u32 	%r246, [bounceFlag];
	setp.eq.s32	%p3, %r246, 0;
	@%p3 bra 	BB0_48;

	ld.u8 	%rs7, [%rd66+1];
	cvt.rn.f32.u16	%f364, %rs7;
	div.rn.f32 	%f365, %f364, 0f437F0000;
	cvt.rn.f32.u16	%f366, %rs1;
	div.rn.f32 	%f367, %f366, 0f437F0000;
	ld.global.v2.u32 	{%r251, %r252}, [pixelID];
	cvt.u64.u32	%rd75, %r251;
	cvt.u64.u32	%rd76, %r252;
	mov.u64 	%rd85, GBufferPos;
	cvta.global.u64 	%rd74, %rd85;
	mov.u32 	%r250, 12;
	// inline asm
	call (%rd73), _rt_buffer_get_64, (%rd74, %r224, %r250, %rd75, %rd76, %rd240, %rd240);
	// inline asm
	ld.f32 	%f1078, [%rd73+8];
	ld.f32 	%f1077, [%rd73+4];
	ld.f32 	%f1076, [%rd73];
	ld.global.v2.u32 	{%r255, %r256}, [pixelID];
	cvt.u64.u32	%rd81, %r255;
	cvt.u64.u32	%rd82, %r256;
	mov.u64 	%rd86, GBufferNormal;
	cvta.global.u64 	%rd80, %rd86;
	// inline asm
	call (%rd79), _rt_buffer_get_64, (%rd80, %r224, %r250, %rd81, %rd82, %rd240, %rd240);
	// inline asm
	ld.f32 	%f9, [%rd79+4];
	ld.f32 	%f8, [%rd79+8];
	ld.f32 	%f7, [%rd79];
	abs.f32 	%f368, %f7;
	abs.f32 	%f369, %f8;
	setp.gt.f32	%p4, %f368, %f369;
	neg.f32 	%f370, %f9;
	neg.f32 	%f371, %f8;
	selp.f32	%f372, %f370, 0f00000000, %p4;
	selp.f32	%f373, %f7, %f371, %p4;
	selp.f32	%f374, 0f00000000, %f9, %p4;
	mul.f32 	%f375, %f373, %f373;
	fma.rn.f32 	%f376, %f372, %f372, %f375;
	fma.rn.f32 	%f377, %f374, %f374, %f376;
	sqrt.rn.f32 	%f378, %f377;
	rcp.rn.f32 	%f379, %f378;
	mul.f32 	%f10, %f372, %f379;
	mul.f32 	%f11, %f373, %f379;
	mul.f32 	%f12, %f374, %f379;
	sqrt.rn.f32 	%f13, %f367;
	mul.f32 	%f1067, %f365, 0f40C90FDB;
	add.u64 	%rd87, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd87;
	abs.f32 	%f15, %f1067;
	setp.neu.f32	%p5, %f15, 0f7F800000;
	mov.f32 	%f1061, %f1067;
	@%p5 bra 	BB0_3;

	mov.f32 	%f380, 0f00000000;
	mul.rn.f32 	%f1061, %f1067, %f380;

BB0_3:
	mul.f32 	%f381, %f1061, 0f3F22F983;
	cvt.rni.s32.f32	%r694, %f381;
	cvt.rn.f32.s32	%f382, %r694;
	neg.f32 	%f383, %f382;
	mov.f32 	%f384, 0f3FC90FDA;
	fma.rn.f32 	%f385, %f383, %f384, %f1061;
	mov.f32 	%f386, 0f33A22168;
	fma.rn.f32 	%f387, %f383, %f386, %f385;
	mov.f32 	%f388, 0f27C234C5;
	fma.rn.f32 	%f1062, %f383, %f388, %f387;
	abs.f32 	%f389, %f1061;
	add.s64 	%rd3, %rd2, 24;
	setp.leu.f32	%p6, %f389, 0f47CE4780;
	@%p6 bra 	BB0_14;

	mov.b32 	 %r2, %f1061;
	shr.u32 	%r3, %r2, 23;
	shl.b32 	%r261, %r2, 8;
	or.b32  	%r4, %r261, -2147483648;
	mov.u32 	%r686, 0;
	mov.u64 	%rd235, __cudart_i2opi_f;
	mov.u32 	%r685, -6;
	mov.u64 	%rd236, %rd2;

BB0_5:
	.pragma "nounroll";
	ld.const.u32 	%r264, [%rd235];
	// inline asm
	{
	mad.lo.cc.u32   %r262, %r264, %r4, %r686;
	madc.hi.u32     %r686, %r264, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd236], %r262;
	add.s64 	%rd236, %rd236, 4;
	add.s64 	%rd235, %rd235, 4;
	add.s32 	%r685, %r685, 1;
	setp.ne.s32	%p7, %r685, 0;
	@%p7 bra 	BB0_5;

	and.b32  	%r267, %r3, 255;
	add.s32 	%r268, %r267, -128;
	shr.u32 	%r269, %r268, 5;
	and.b32  	%r9, %r2, -2147483648;
	st.local.u32 	[%rd3], %r686;
	mov.u32 	%r270, 6;
	sub.s32 	%r271, %r270, %r269;
	mul.wide.s32 	%rd89, %r271, 4;
	add.s64 	%rd8, %rd2, %rd89;
	ld.local.u32 	%r687, [%rd8];
	ld.local.u32 	%r688, [%rd8+-4];
	and.b32  	%r12, %r3, 31;
	setp.eq.s32	%p8, %r12, 0;
	@%p8 bra 	BB0_8;

	mov.u32 	%r272, 32;
	sub.s32 	%r273, %r272, %r12;
	shr.u32 	%r274, %r688, %r273;
	shl.b32 	%r275, %r687, %r12;
	add.s32 	%r687, %r274, %r275;
	ld.local.u32 	%r276, [%rd8+-8];
	shr.u32 	%r277, %r276, %r273;
	shl.b32 	%r278, %r688, %r12;
	add.s32 	%r688, %r277, %r278;

BB0_8:
	shr.u32 	%r279, %r688, 30;
	shl.b32 	%r280, %r687, 2;
	add.s32 	%r689, %r279, %r280;
	shl.b32 	%r18, %r688, 2;
	shr.u32 	%r281, %r689, 31;
	shr.u32 	%r282, %r687, 30;
	add.s32 	%r19, %r281, %r282;
	setp.eq.s32	%p9, %r281, 0;
	@%p9 bra 	BB0_9;

	not.b32 	%r283, %r689;
	neg.s32 	%r691, %r18;
	setp.eq.s32	%p10, %r18, 0;
	selp.u32	%r284, 1, 0, %p10;
	add.s32 	%r689, %r284, %r283;
	xor.b32  	%r690, %r9, -2147483648;
	bra.uni 	BB0_11;

BB0_48:
	ld.global.f32 	%f1076, [cameraPos];
	ld.global.f32 	%f1077, [cameraPos+4];
	ld.global.f32 	%f1078, [cameraPos+8];
	ld.global.v2.u32 	{%r351, %r352}, [resolution];
	cvt.rn.f32.u32	%f451, %r351;
	cvt.rn.f32.u32	%f452, %r352;
	div.rn.f32 	%f453, %f451, %f452;
	ld.global.v2.u32 	{%r355, %r356}, [pixelID];
	cvt.rn.f32.u32	%f454, %r355;
	add.f32 	%f455, %f1, %f454;
	div.rn.f32 	%f456, %f455, %f451;
	cvt.rn.f32.u32	%f457, %r356;
	add.f32 	%f458, %f2, %f457;
	div.rn.f32 	%f459, %f458, %f452;
	fma.rn.f32 	%f460, %f456, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f461, %f459, 0f40000000, 0fBF800000;
	ld.global.f32 	%f462, [cameraFov];
	mul.f32 	%f463, %f453, %f462;
	ld.global.f32 	%f464, [cameraRht];
	mul.f32 	%f465, %f460, %f464;
	ld.global.f32 	%f466, [cameraRht+4];
	mul.f32 	%f467, %f460, %f466;
	ld.global.f32 	%f468, [cameraRht+8];
	mul.f32 	%f469, %f460, %f468;
	ld.global.f32 	%f470, [cameraFwd];
	fma.rn.f32 	%f471, %f463, %f465, %f470;
	ld.global.f32 	%f472, [cameraFwd+4];
	fma.rn.f32 	%f473, %f463, %f467, %f472;
	ld.global.f32 	%f474, [cameraFwd+8];
	fma.rn.f32 	%f475, %f463, %f469, %f474;
	ld.global.f32 	%f476, [cameraUp];
	mul.f32 	%f477, %f461, %f476;
	ld.global.f32 	%f478, [cameraUp+4];
	mul.f32 	%f479, %f461, %f478;
	ld.global.f32 	%f480, [cameraUp+8];
	mul.f32 	%f481, %f461, %f480;
	fma.rn.f32 	%f482, %f462, %f477, %f471;
	fma.rn.f32 	%f483, %f462, %f479, %f473;
	fma.rn.f32 	%f484, %f462, %f481, %f475;
	mul.f32 	%f485, %f483, %f483;
	fma.rn.f32 	%f486, %f482, %f482, %f485;
	fma.rn.f32 	%f487, %f484, %f484, %f486;
	sqrt.rn.f32 	%f488, %f487;
	rcp.rn.f32 	%f489, %f488;
	mul.f32 	%f62, %f482, %f489;
	mul.f32 	%f63, %f483, %f489;
	mul.f32 	%f64, %f489, %f484;
	bra.uni 	BB0_49;

BB0_9:
	mov.u32 	%r690, %r9;
	mov.u32 	%r691, %r18;

BB0_11:
	clz.b32 	%r693, %r689;
	setp.eq.s32	%p11, %r693, 0;
	shl.b32 	%r285, %r689, %r693;
	mov.u32 	%r286, 32;
	sub.s32 	%r287, %r286, %r693;
	shr.u32 	%r288, %r691, %r287;
	add.s32 	%r289, %r288, %r285;
	selp.b32	%r27, %r689, %r289, %p11;
	mov.u32 	%r290, -921707870;
	mul.hi.u32 	%r692, %r27, %r290;
	setp.eq.s32	%p12, %r9, 0;
	neg.s32 	%r291, %r19;
	selp.b32	%r694, %r19, %r291, %p12;
	setp.lt.s32	%p13, %r692, 1;
	@%p13 bra 	BB0_13;

	mul.lo.s32 	%r292, %r27, -921707870;
	shr.u32 	%r293, %r292, 31;
	shl.b32 	%r294, %r692, 1;
	add.s32 	%r692, %r293, %r294;
	add.s32 	%r693, %r693, 1;

BB0_13:
	mov.u32 	%r295, 126;
	sub.s32 	%r296, %r295, %r693;
	shl.b32 	%r297, %r296, 23;
	add.s32 	%r298, %r692, 1;
	shr.u32 	%r299, %r298, 7;
	add.s32 	%r300, %r299, 1;
	shr.u32 	%r301, %r300, 1;
	add.s32 	%r302, %r301, %r297;
	or.b32  	%r303, %r302, %r690;
	mov.b32 	 %f1062, %r303;

BB0_14:
	mul.rn.f32 	%f21, %f1062, %f1062;
	add.s32 	%r35, %r694, 1;
	and.b32  	%r36, %r35, 1;
	setp.eq.s32	%p14, %r36, 0;
	@%p14 bra 	BB0_16;

	mov.f32 	%f390, 0fBAB6061A;
	mov.f32 	%f391, 0f37CCF5CE;
	fma.rn.f32 	%f1063, %f391, %f21, %f390;
	bra.uni 	BB0_17;

BB0_16:
	mov.f32 	%f392, 0f3C08839E;
	mov.f32 	%f393, 0fB94CA1F9;
	fma.rn.f32 	%f1063, %f393, %f21, %f392;

BB0_17:
	@%p14 bra 	BB0_19;

	mov.f32 	%f394, 0f3D2AAAA5;
	fma.rn.f32 	%f395, %f1063, %f21, %f394;
	mov.f32 	%f396, 0fBF000000;
	fma.rn.f32 	%f1064, %f395, %f21, %f396;
	bra.uni 	BB0_20;

BB0_19:
	mov.f32 	%f397, 0fBE2AAAA3;
	fma.rn.f32 	%f398, %f1063, %f21, %f397;
	mov.f32 	%f399, 0f00000000;
	fma.rn.f32 	%f1064, %f398, %f21, %f399;

BB0_20:
	fma.rn.f32 	%f1065, %f1064, %f1062, %f1062;
	@%p14 bra 	BB0_22;

	mov.f32 	%f400, 0f3F800000;
	fma.rn.f32 	%f1065, %f1064, %f21, %f400;

BB0_22:
	and.b32  	%r304, %r35, 2;
	setp.eq.s32	%p17, %r304, 0;
	@%p17 bra 	BB0_24;

	mov.f32 	%f401, 0f00000000;
	mov.f32 	%f402, 0fBF800000;
	fma.rn.f32 	%f1065, %f1065, %f402, %f401;

BB0_24:
	@%p5 bra 	BB0_26;

	mov.f32 	%f403, 0f00000000;
	mul.rn.f32 	%f1067, %f1067, %f403;

BB0_26:
	mul.f32 	%f404, %f1067, 0f3F22F983;
	cvt.rni.s32.f32	%r704, %f404;
	cvt.rn.f32.s32	%f405, %r704;
	neg.f32 	%f406, %f405;
	fma.rn.f32 	%f408, %f406, %f384, %f1067;
	fma.rn.f32 	%f410, %f406, %f386, %f408;
	fma.rn.f32 	%f1068, %f406, %f388, %f410;
	abs.f32 	%f412, %f1067;
	setp.leu.f32	%p19, %f412, 0f47CE4780;
	@%p19 bra 	BB0_37;

	mov.b32 	 %r38, %f1067;
	shr.u32 	%r39, %r38, 23;
	shl.b32 	%r307, %r38, 8;
	or.b32  	%r40, %r307, -2147483648;
	mov.u32 	%r696, 0;
	mov.u64 	%rd237, __cudart_i2opi_f;
	mov.u32 	%r695, -6;
	mov.u64 	%rd238, %rd2;

BB0_28:
	.pragma "nounroll";
	ld.const.u32 	%r310, [%rd237];
	// inline asm
	{
	mad.lo.cc.u32   %r308, %r310, %r40, %r696;
	madc.hi.u32     %r696, %r310, %r40,  0;
	}
	// inline asm
	st.local.u32 	[%rd238], %r308;
	add.s64 	%rd238, %rd238, 4;
	add.s64 	%rd237, %rd237, 4;
	add.s32 	%r695, %r695, 1;
	setp.ne.s32	%p20, %r695, 0;
	@%p20 bra 	BB0_28;

	and.b32  	%r313, %r39, 255;
	add.s32 	%r314, %r313, -128;
	shr.u32 	%r315, %r314, 5;
	and.b32  	%r45, %r38, -2147483648;
	st.local.u32 	[%rd3], %r696;
	mov.u32 	%r316, 6;
	sub.s32 	%r317, %r316, %r315;
	mul.wide.s32 	%rd91, %r317, 4;
	add.s64 	%rd13, %rd2, %rd91;
	ld.local.u32 	%r697, [%rd13];
	ld.local.u32 	%r698, [%rd13+-4];
	and.b32  	%r48, %r39, 31;
	setp.eq.s32	%p21, %r48, 0;
	@%p21 bra 	BB0_31;

	mov.u32 	%r318, 32;
	sub.s32 	%r319, %r318, %r48;
	shr.u32 	%r320, %r698, %r319;
	shl.b32 	%r321, %r697, %r48;
	add.s32 	%r697, %r320, %r321;
	ld.local.u32 	%r322, [%rd13+-8];
	shr.u32 	%r323, %r322, %r319;
	shl.b32 	%r324, %r698, %r48;
	add.s32 	%r698, %r323, %r324;

BB0_31:
	shr.u32 	%r325, %r698, 30;
	shl.b32 	%r326, %r697, 2;
	add.s32 	%r699, %r325, %r326;
	shl.b32 	%r54, %r698, 2;
	shr.u32 	%r327, %r699, 31;
	shr.u32 	%r328, %r697, 30;
	add.s32 	%r55, %r327, %r328;
	setp.eq.s32	%p22, %r327, 0;
	@%p22 bra 	BB0_32;

	not.b32 	%r329, %r699;
	neg.s32 	%r701, %r54;
	setp.eq.s32	%p23, %r54, 0;
	selp.u32	%r330, 1, 0, %p23;
	add.s32 	%r699, %r330, %r329;
	xor.b32  	%r700, %r45, -2147483648;
	bra.uni 	BB0_34;

BB0_32:
	mov.u32 	%r700, %r45;
	mov.u32 	%r701, %r54;

BB0_34:
	clz.b32 	%r703, %r699;
	setp.eq.s32	%p24, %r703, 0;
	shl.b32 	%r331, %r699, %r703;
	mov.u32 	%r332, 32;
	sub.s32 	%r333, %r332, %r703;
	shr.u32 	%r334, %r701, %r333;
	add.s32 	%r335, %r334, %r331;
	selp.b32	%r63, %r699, %r335, %p24;
	mov.u32 	%r336, -921707870;
	mul.hi.u32 	%r702, %r63, %r336;
	setp.eq.s32	%p25, %r45, 0;
	neg.s32 	%r337, %r55;
	selp.b32	%r704, %r55, %r337, %p25;
	setp.lt.s32	%p26, %r702, 1;
	@%p26 bra 	BB0_36;

	mul.lo.s32 	%r338, %r63, -921707870;
	shr.u32 	%r339, %r338, 31;
	shl.b32 	%r340, %r702, 1;
	add.s32 	%r702, %r339, %r340;
	add.s32 	%r703, %r703, 1;

BB0_36:
	mov.u32 	%r341, 126;
	sub.s32 	%r342, %r341, %r703;
	shl.b32 	%r343, %r342, 23;
	add.s32 	%r344, %r702, 1;
	shr.u32 	%r345, %r344, 7;
	add.s32 	%r346, %r345, 1;
	shr.u32 	%r347, %r346, 1;
	add.s32 	%r348, %r347, %r343;
	or.b32  	%r349, %r348, %r700;
	mov.b32 	 %f1068, %r349;

BB0_37:
	mul.rn.f32 	%f38, %f1068, %f1068;
	and.b32  	%r71, %r704, 1;
	setp.eq.s32	%p27, %r71, 0;
	@%p27 bra 	BB0_39;

	mov.f32 	%f413, 0fBAB6061A;
	mov.f32 	%f414, 0f37CCF5CE;
	fma.rn.f32 	%f1069, %f414, %f38, %f413;
	bra.uni 	BB0_40;

BB0_39:
	mov.f32 	%f415, 0f3C08839E;
	mov.f32 	%f416, 0fB94CA1F9;
	fma.rn.f32 	%f1069, %f416, %f38, %f415;

BB0_40:
	@%p27 bra 	BB0_42;

	mov.f32 	%f417, 0f3D2AAAA5;
	fma.rn.f32 	%f418, %f1069, %f38, %f417;
	mov.f32 	%f419, 0fBF000000;
	fma.rn.f32 	%f1070, %f418, %f38, %f419;
	bra.uni 	BB0_43;

BB0_42:
	mov.f32 	%f420, 0fBE2AAAA3;
	fma.rn.f32 	%f421, %f1069, %f38, %f420;
	mov.f32 	%f422, 0f00000000;
	fma.rn.f32 	%f1070, %f421, %f38, %f422;

BB0_43:
	fma.rn.f32 	%f1071, %f1070, %f1068, %f1068;
	@%p27 bra 	BB0_45;

	mov.f32 	%f423, 0f3F800000;
	fma.rn.f32 	%f1071, %f1070, %f38, %f423;

BB0_45:
	and.b32  	%r350, %r704, 2;
	setp.eq.s32	%p30, %r350, 0;
	@%p30 bra 	BB0_47;

	mov.f32 	%f424, 0f00000000;
	mov.f32 	%f425, 0fBF800000;
	fma.rn.f32 	%f1071, %f1071, %f425, %f424;

BB0_47:
	mul.f32 	%f426, %f13, %f1065;
	mul.f32 	%f427, %f426, %f426;
	mov.f32 	%f428, 0f3F800000;
	sub.f32 	%f429, %f428, %f427;
	mul.f32 	%f430, %f13, %f1071;
	mul.f32 	%f431, %f430, %f430;
	sub.f32 	%f432, %f429, %f431;
	mov.f32 	%f433, 0f00000000;
	max.f32 	%f434, %f433, %f432;
	sqrt.rn.f32 	%f435, %f434;
	mul.f32 	%f436, %f10, %f430;
	mul.f32 	%f437, %f11, %f430;
	mul.f32 	%f438, %f12, %f430;
	mul.f32 	%f439, %f8, %f11;
	mul.f32 	%f440, %f9, %f12;
	sub.f32 	%f441, %f439, %f440;
	fma.rn.f32 	%f442, %f441, %f426, %f436;
	mul.f32 	%f443, %f7, %f12;
	mul.f32 	%f444, %f8, %f10;
	sub.f32 	%f445, %f443, %f444;
	fma.rn.f32 	%f446, %f445, %f426, %f437;
	mul.f32 	%f447, %f9, %f10;
	mul.f32 	%f448, %f7, %f11;
	sub.f32 	%f449, %f447, %f448;
	fma.rn.f32 	%f450, %f449, %f426, %f438;
	fma.rn.f32 	%f62, %f7, %f435, %f442;
	fma.rn.f32 	%f63, %f9, %f435, %f446;
	fma.rn.f32 	%f64, %f8, %f435, %f450;

BB0_49:
	add.u64 	%rd98, %SP, 32;
	cvta.to.local.u64 	%rd99, %rd98;
	add.s64 	%rd14, %rd99, 12;
	mov.u32 	%r361, -1082130432;
	st.local.u32 	[%rd99+12], %r361;
	mov.u32 	%r362, 0;
	st.local.u32 	[%rd99], %r362;
	st.local.u32 	[%rd99+4], %r362;
	st.local.u32 	[%rd99+8], %r362;
	st.local.u32 	[%rd99+16], %r362;
	st.local.u32 	[%rd99+20], %r362;
	st.local.u32 	[%rd99+24], %r362;
	ld.global.v2.u32 	{%r363, %r364}, [pixelID];
	cvt.u64.u32	%rd94, %r363;
	cvt.u64.u32	%rd95, %r364;
	mov.u64 	%rd100, GBufferAtten;
	cvta.global.u64 	%rd93, %rd100;
	mov.u32 	%r360, 12;
	// inline asm
	call (%rd92), _rt_buffer_get_64, (%rd93, %r224, %r360, %rd94, %rd95, %rd240, %rd240);
	// inline asm
	ld.f32 	%f70, [%rd92+8];
	ld.f32 	%f68, [%rd92+4];
	ld.f32 	%f69, [%rd92];
	add.f32 	%f490, %f69, %f68;
	add.f32 	%f491, %f70, %f490;
	ld.global.u32 	%r367, [bounceFlag];
	setp.ne.s32	%p31, %r367, 0;
	setp.eq.f32	%p32, %f491, 0f00000000;
	and.pred  	%p33, %p31, %p32;
	@%p33 bra 	BB0_51;

	ld.global.u32 	%r368, [root];
	mov.u32 	%r369, 0;
	mov.f32 	%f498, 0f00000000;
	mov.f32 	%f499, 0f6C4ECB8F;
	mov.u32 	%r370, 28;
	// inline asm
	call _rt_trace_64, (%r368, %f1076, %f1077, %f1078, %f62, %f63, %f64, %r369, %f498, %f499, %rd98, %r370);
	// inline asm

BB0_51:
	ld.local.f32 	%f71, [%rd14];
	setp.ltu.f32	%p34, %f71, 0f00000000;
	@%p34 bra 	BB0_186;
	bra.uni 	BB0_52;

BB0_186:
	ld.global.u32 	%r626, [bounceFlag];
	setp.eq.s32	%p127, %r626, 0;
	selp.u16	%rs13, 1, 0, %p127;
	mov.f32 	%f1136, 0f00000000;
	mov.f32 	%f1137, %f1136;
	mov.f32 	%f1138, %f1136;
	mov.f32 	%f1139, %f1136;
	mov.f32 	%f1140, %f1136;
	mov.f32 	%f1141, %f1136;
	mov.f32 	%f1122, %f1136;
	mov.f32 	%f1123, %f1136;
	mov.f32 	%f1124, %f1136;
	bra.uni 	BB0_187;

BB0_52:
	fma.rn.f32 	%f500, %f62, %f71, %f1076;
	fma.rn.f32 	%f501, %f63, %f71, %f1077;
	fma.rn.f32 	%f502, %f64, %f71, %f1078;
	mul.f32 	%f503, %f500, 0f3456BF95;
	mul.f32 	%f504, %f501, 0f3456BF95;
	mul.f32 	%f505, %f502, 0f3456BF95;
	abs.f32 	%f506, %f503;
	abs.f32 	%f507, %f504;
	abs.f32 	%f508, %f505;
	max.f32 	%f509, %f506, %f507;
	max.f32 	%f510, %f509, %f508;
	mov.f32 	%f511, 0f38D1B717;
	max.f32 	%f512, %f510, %f511;
	ld.local.f32 	%f513, [%rd14+-12];
	ld.local.f32 	%f514, [%rd14+-8];
	ld.local.f32 	%f515, [%rd14+-4];
	fma.rn.f32 	%f72, %f512, %f513, %f500;
	fma.rn.f32 	%f73, %f512, %f514, %f501;
	fma.rn.f32 	%f74, %f512, %f515, %f502;
	ld.global.v2.u32 	{%r375, %r376}, [pixelID];
	cvt.u64.u32	%rd104, %r375;
	cvt.u64.u32	%rd105, %r376;
	mov.u64 	%rd114, GBufferPos;
	cvta.global.u64 	%rd103, %rd114;
	// inline asm
	call (%rd102), _rt_buffer_get_64, (%rd103, %r224, %r360, %rd104, %rd105, %rd240, %rd240);
	// inline asm
	st.f32 	[%rd102+8], %f74;
	st.f32 	[%rd102+4], %f73;
	st.f32 	[%rd102], %f72;
	ld.global.v2.u32 	{%r379, %r380}, [pixelID];
	cvt.u64.u32	%rd110, %r379;
	cvt.u64.u32	%rd111, %r380;
	mov.u64 	%rd115, GBufferNormal;
	cvta.global.u64 	%rd109, %rd115;
	// inline asm
	call (%rd108), _rt_buffer_get_64, (%rd109, %r224, %r360, %rd110, %rd111, %rd240, %rd240);
	// inline asm
	ld.local.f32 	%f516, [%rd14+-12];
	ld.local.f32 	%f517, [%rd14+-8];
	ld.local.f32 	%f518, [%rd14+-4];
	st.f32 	[%rd108+8], %f518;
	st.f32 	[%rd108+4], %f517;
	st.f32 	[%rd108], %f516;
	ld.local.f32 	%f519, [%rd14+12];
	ld.local.f32 	%f520, [%rd14+8];
	ld.local.f32 	%f521, [%rd14+4];
	setp.lt.f32	%p35, %f521, 0f00000000;
	neg.f32 	%f522, %f521;
	selp.f32	%f523, %f522, %f521, %p35;
	ld.global.f32 	%f524, [backFaceWeight];
	selp.f32	%f525, %f524, 0f3F800000, %p35;
	cvt.rmi.f32.f32	%f526, %f523;
	cvt.rmi.f32.f32	%f527, %f520;
	cvt.rmi.f32.f32	%f528, %f519;
	sub.f32 	%f529, %f523, %f526;
	sub.f32 	%f530, %f520, %f527;
	sub.f32 	%f531, %f519, %f528;
	mul.f32 	%f1139, %f525, %f529;
	mul.f32 	%f1140, %f525, %f530;
	mul.f32 	%f1141, %f525, %f531;
	mul.f32 	%f1136, %f526, 0f3B808081;
	mul.f32 	%f1137, %f527, 0f3B808081;
	mul.f32 	%f1138, %f528, 0f3B808081;
	ld.global.u32 	%r383, [bounceFlag];
	setp.lt.s32	%p36, %r383, 1;
	@%p36 bra 	BB0_54;

	mul.f32 	%f1139, %f69, %f1139;
	mul.f32 	%f1140, %f68, %f1140;
	mul.f32 	%f1141, %f70, %f1141;
	mul.f32 	%f1136, %f69, %f1136;
	mul.f32 	%f1137, %f68, %f1137;
	mul.f32 	%f1138, %f70, %f1138;

BB0_54:
	mov.u64 	%rd121, globalLights;
	cvta.global.u64 	%rd120, %rd121;
	mov.u32 	%r384, 1;
	mov.u32 	%r385, 32;
	// inline asm
	call (%rd116, %rd117, %rd118, %rd119), _rt_buffer_get_size_64, (%rd120, %r384, %r385);
	// inline asm
	cvt.u32.u64	%r72, %rd116;
	setp.eq.s32	%p37, %r72, 0;
	mov.f32 	%f1122, 0f00000000;
	mov.f32 	%f1123, %f1122;
	mov.f32 	%f1124, %f1122;
	@%p37 bra 	BB0_160;

	// inline asm
	call (%rd122, %rd123, %rd124, %rd125), _rt_buffer_get_size_64, (%rd120, %r384, %r385);
	// inline asm
	cvt.u32.u64	%r390, %rd122;
	cvt.rn.f32.u32	%f535, %r390;
	mul.f32 	%f536, %f3, %f535;
	cvt.rzi.u32.f32	%r391, %f536;
	add.s32 	%r392, %r390, -1;
	min.u32 	%r393, %r391, %r392;
	cvt.u64.u32	%rd129, %r393;
	// inline asm
	call (%rd127), _rt_buffer_get_64, (%rd120, %r384, %r385, %rd129, %rd240, %rd240, %rd240);
	// inline asm
	ld.f32 	%f106, [%rd127+28];
	ld.f32 	%f105, [%rd127+24];
	ld.f32 	%f104, [%rd127+20];
	ld.f32 	%f103, [%rd127+16];
	ld.f32 	%f96, [%rd127+12];
	ld.f32 	%f102, [%rd127+8];
	ld.f32 	%f101, [%rd127+4];
	ld.f32 	%f107, [%rd127];
	setp.lt.f32	%p38, %f107, 0f3F800000;
	@%p38 bra 	BB0_109;
	bra.uni 	BB0_56;

BB0_109:
	ld.local.f32 	%f659, [%rd14+-12];
	mul.f32 	%f660, %f101, %f659;
	ld.local.f32 	%f661, [%rd14+-8];
	mul.f32 	%f662, %f102, %f661;
	neg.f32 	%f663, %f662;
	sub.f32 	%f664, %f663, %f660;
	ld.local.f32 	%f665, [%rd14+-4];
	mul.f32 	%f666, %f96, %f665;
	sub.f32 	%f176, %f664, %f666;
	mov.f32 	%f1119, 0f00000000;
	setp.le.f32	%p71, %f176, 0f00000000;
	mov.f32 	%f1120, %f1119;
	mov.f32 	%f1121, %f1119;
	@%p71 bra 	BB0_159;

	abs.f32 	%f668, %f101;
	abs.f32 	%f669, %f96;
	setp.gt.f32	%p72, %f668, %f669;
	neg.f32 	%f670, %f102;
	selp.f32	%f671, %f670, 0f00000000, %p72;
	neg.f32 	%f672, %f96;
	selp.f32	%f673, %f101, %f672, %p72;
	selp.f32	%f674, 0f00000000, %f102, %p72;
	mul.f32 	%f675, %f673, %f673;
	fma.rn.f32 	%f676, %f671, %f671, %f675;
	fma.rn.f32 	%f677, %f674, %f674, %f676;
	sqrt.rn.f32 	%f678, %f677;
	rcp.rn.f32 	%f679, %f678;
	mul.f32 	%f177, %f671, %f679;
	mul.f32 	%f178, %f673, %f679;
	mul.f32 	%f179, %f674, %f679;
	setp.ltu.f32	%p73, %f103, 0f00000000;
	mov.f32 	%f1118, 0f3F800000;
	@%p73 bra 	BB0_158;

	sqrt.rn.f32 	%f180, %f1;
	add.u64 	%rd152, %SP, 0;
	cvta.to.local.u64 	%rd28, %rd152;
	mul.f32 	%f1112, %f2, 0f40C90FDB;
	abs.f32 	%f182, %f1112;
	setp.neu.f32	%p74, %f182, 0f7F800000;
	mov.f32 	%f1106, %f1112;
	@%p74 bra 	BB0_113;

	mov.f32 	%f680, 0f00000000;
	mul.rn.f32 	%f1106, %f1112, %f680;

BB0_113:
	mul.f32 	%f681, %f1106, 0f3F22F983;
	cvt.rni.s32.f32	%r734, %f681;
	cvt.rn.f32.s32	%f682, %r734;
	neg.f32 	%f683, %f682;
	mov.f32 	%f684, 0f3FC90FDA;
	fma.rn.f32 	%f685, %f683, %f684, %f1106;
	mov.f32 	%f686, 0f33A22168;
	fma.rn.f32 	%f687, %f683, %f686, %f685;
	mov.f32 	%f688, 0f27C234C5;
	fma.rn.f32 	%f1107, %f683, %f688, %f687;
	abs.f32 	%f689, %f1106;
	add.s64 	%rd29, %rd28, 24;
	setp.leu.f32	%p75, %f689, 0f47CE4780;
	@%p75 bra 	BB0_124;

	mov.b32 	 %r144, %f1106;
	shr.u32 	%r145, %r144, 23;
	shl.b32 	%r497, %r144, 8;
	or.b32  	%r146, %r497, -2147483648;
	mov.u32 	%r726, 0;
	mov.u64 	%rd243, __cudart_i2opi_f;
	mov.u32 	%r725, -6;
	mov.u64 	%rd244, %rd28;

BB0_115:
	.pragma "nounroll";
	ld.const.u32 	%r500, [%rd243];
	// inline asm
	{
	mad.lo.cc.u32   %r498, %r500, %r146, %r726;
	madc.hi.u32     %r726, %r500, %r146,  0;
	}
	// inline asm
	st.local.u32 	[%rd244], %r498;
	add.s64 	%rd244, %rd244, 4;
	add.s64 	%rd243, %rd243, 4;
	add.s32 	%r725, %r725, 1;
	setp.ne.s32	%p76, %r725, 0;
	@%p76 bra 	BB0_115;

	and.b32  	%r503, %r145, 255;
	add.s32 	%r504, %r503, -128;
	shr.u32 	%r505, %r504, 5;
	and.b32  	%r151, %r144, -2147483648;
	st.local.u32 	[%rd29], %r726;
	mov.u32 	%r506, 6;
	sub.s32 	%r507, %r506, %r505;
	mul.wide.s32 	%rd154, %r507, 4;
	add.s64 	%rd34, %rd28, %rd154;
	ld.local.u32 	%r727, [%rd34];
	ld.local.u32 	%r728, [%rd34+-4];
	and.b32  	%r154, %r145, 31;
	setp.eq.s32	%p77, %r154, 0;
	@%p77 bra 	BB0_118;

	sub.s32 	%r509, %r385, %r154;
	shr.u32 	%r510, %r728, %r509;
	shl.b32 	%r511, %r727, %r154;
	add.s32 	%r727, %r510, %r511;
	ld.local.u32 	%r512, [%rd34+-8];
	shr.u32 	%r513, %r512, %r509;
	shl.b32 	%r514, %r728, %r154;
	add.s32 	%r728, %r513, %r514;

BB0_118:
	shr.u32 	%r515, %r728, 30;
	shl.b32 	%r516, %r727, 2;
	add.s32 	%r729, %r515, %r516;
	shl.b32 	%r160, %r728, 2;
	shr.u32 	%r517, %r729, 31;
	shr.u32 	%r518, %r727, 30;
	add.s32 	%r161, %r517, %r518;
	setp.eq.s32	%p78, %r517, 0;
	@%p78 bra 	BB0_119;

	not.b32 	%r519, %r729;
	neg.s32 	%r731, %r160;
	setp.eq.s32	%p79, %r160, 0;
	selp.u32	%r520, 1, 0, %p79;
	add.s32 	%r729, %r520, %r519;
	xor.b32  	%r730, %r151, -2147483648;
	bra.uni 	BB0_121;

BB0_56:
	ld.local.f32 	%f110, [%rd14+-8];
	ld.local.f32 	%f109, [%rd14+-4];
	ld.local.f32 	%f108, [%rd14+-12];
	abs.f32 	%f537, %f108;
	abs.f32 	%f538, %f109;
	setp.gt.f32	%p39, %f537, %f538;
	neg.f32 	%f539, %f110;
	neg.f32 	%f540, %f109;
	selp.f32	%f541, %f539, 0f00000000, %p39;
	selp.f32	%f542, %f108, %f540, %p39;
	selp.f32	%f543, 0f00000000, %f110, %p39;
	mul.f32 	%f544, %f542, %f542;
	fma.rn.f32 	%f545, %f541, %f541, %f544;
	fma.rn.f32 	%f546, %f543, %f543, %f545;
	sqrt.rn.f32 	%f547, %f546;
	rcp.rn.f32 	%f548, %f547;
	mul.f32 	%f111, %f541, %f548;
	mul.f32 	%f112, %f542, %f548;
	mul.f32 	%f113, %f543, %f548;
	sqrt.rn.f32 	%f114, %f1;
	mul.f32 	%f1091, %f2, 0f40C90FDB;
	abs.f32 	%f116, %f1091;
	setp.neu.f32	%p40, %f116, 0f7F800000;
	mov.f32 	%f1085, %f1091;
	@%p40 bra 	BB0_58;

	mov.f32 	%f549, 0f00000000;
	mul.rn.f32 	%f1085, %f1091, %f549;

BB0_58:
	mul.f32 	%f550, %f1085, 0f3F22F983;
	cvt.rni.s32.f32	%r714, %f550;
	cvt.rn.f32.s32	%f551, %r714;
	neg.f32 	%f552, %f551;
	mov.f32 	%f553, 0f3FC90FDA;
	fma.rn.f32 	%f554, %f552, %f553, %f1085;
	mov.f32 	%f555, 0f33A22168;
	fma.rn.f32 	%f556, %f552, %f555, %f554;
	mov.f32 	%f557, 0f27C234C5;
	fma.rn.f32 	%f1086, %f552, %f557, %f556;
	abs.f32 	%f558, %f1085;
	setp.leu.f32	%p41, %f558, 0f47CE4780;
	@%p41 bra 	BB0_69;

	mov.b32 	 %r74, %f1085;
	shl.b32 	%r396, %r74, 8;
	or.b32  	%r75, %r396, -2147483648;
	add.u64 	%rd135, %SP, 0;
	cvta.to.local.u64 	%rd15, %rd135;
	mov.u32 	%r705, 0;
	mov.u64 	%rd239, %rd15;
	mov.u32 	%r706, %r705;

BB0_60:
	.pragma "nounroll";
	shl.b64 	%rd136, %rd240, 2;
	mov.u64 	%rd137, __cudart_i2opi_f;
	add.s64 	%rd138, %rd137, %rd136;
	ld.const.u32 	%r399, [%rd138];
	// inline asm
	{
	mad.lo.cc.u32   %r397, %r399, %r75, %r706;
	madc.hi.u32     %r706, %r399, %r75,  0;
	}
	// inline asm
	st.local.u32 	[%rd239], %r397;
	add.s32 	%r705, %r705, 1;
	cvt.s64.s32	%rd240, %r705;
	mul.wide.s32 	%rd141, %r705, 4;
	add.s64 	%rd239, %rd15, %rd141;
	setp.ne.s32	%p42, %r705, 6;
	@%p42 bra 	BB0_60;

	bfe.u32 	%r402, %r74, 23, 8;
	add.s32 	%r403, %r402, -128;
	shr.u32 	%r404, %r403, 5;
	and.b32  	%r80, %r74, -2147483648;
	cvta.to.local.u64 	%rd143, %rd135;
	st.local.u32 	[%rd143+24], %r706;
	bfe.u32 	%r81, %r74, 23, 5;
	mov.u32 	%r405, 6;
	sub.s32 	%r406, %r405, %r404;
	mul.wide.s32 	%rd144, %r406, 4;
	add.s64 	%rd20, %rd143, %rd144;
	ld.local.u32 	%r707, [%rd20];
	ld.local.u32 	%r708, [%rd20+-4];
	setp.eq.s32	%p43, %r81, 0;
	@%p43 bra 	BB0_63;

	sub.s32 	%r408, %r385, %r81;
	shr.u32 	%r409, %r708, %r408;
	shl.b32 	%r410, %r707, %r81;
	add.s32 	%r707, %r409, %r410;
	ld.local.u32 	%r411, [%rd20+-8];
	shr.u32 	%r412, %r411, %r408;
	shl.b32 	%r413, %r708, %r81;
	add.s32 	%r708, %r412, %r413;

BB0_63:
	shr.u32 	%r414, %r708, 30;
	shl.b32 	%r415, %r707, 2;
	add.s32 	%r709, %r414, %r415;
	shl.b32 	%r89, %r708, 2;
	shr.u32 	%r416, %r709, 31;
	shr.u32 	%r417, %r707, 30;
	add.s32 	%r90, %r416, %r417;
	setp.eq.s32	%p44, %r416, 0;
	@%p44 bra 	BB0_64;

	not.b32 	%r418, %r709;
	neg.s32 	%r711, %r89;
	setp.eq.s32	%p45, %r89, 0;
	selp.u32	%r419, 1, 0, %p45;
	add.s32 	%r709, %r419, %r418;
	xor.b32  	%r710, %r80, -2147483648;
	bra.uni 	BB0_66;

BB0_64:
	mov.u32 	%r710, %r80;
	mov.u32 	%r711, %r89;

BB0_66:
	clz.b32 	%r713, %r709;
	setp.eq.s32	%p46, %r713, 0;
	shl.b32 	%r420, %r709, %r713;
	sub.s32 	%r422, %r385, %r713;
	shr.u32 	%r423, %r711, %r422;
	add.s32 	%r424, %r423, %r420;
	selp.b32	%r98, %r709, %r424, %p46;
	mov.u32 	%r425, -921707870;
	mul.hi.u32 	%r712, %r98, %r425;
	setp.eq.s32	%p47, %r80, 0;
	neg.s32 	%r426, %r90;
	selp.b32	%r714, %r90, %r426, %p47;
	setp.lt.s32	%p48, %r712, 1;
	@%p48 bra 	BB0_68;

	mul.lo.s32 	%r427, %r98, -921707870;
	shr.u32 	%r428, %r427, 31;
	shl.b32 	%r429, %r712, 1;
	add.s32 	%r712, %r428, %r429;
	add.s32 	%r713, %r713, 1;

BB0_68:
	mov.u32 	%r430, 126;
	sub.s32 	%r431, %r430, %r713;
	shl.b32 	%r432, %r431, 23;
	add.s32 	%r433, %r712, 1;
	shr.u32 	%r434, %r433, 7;
	add.s32 	%r435, %r434, 1;
	shr.u32 	%r436, %r435, 1;
	add.s32 	%r437, %r436, %r432;
	or.b32  	%r438, %r437, %r710;
	mov.b32 	 %f1086, %r438;

BB0_69:
	mul.rn.f32 	%f122, %f1086, %f1086;
	add.s32 	%r106, %r714, 1;
	and.b32  	%r107, %r106, 1;
	setp.eq.s32	%p49, %r107, 0;
	@%p49 bra 	BB0_71;

	mov.f32 	%f559, 0fBAB6061A;
	mov.f32 	%f560, 0f37CCF5CE;
	fma.rn.f32 	%f1087, %f560, %f122, %f559;
	bra.uni 	BB0_72;

BB0_71:
	mov.f32 	%f561, 0f3C08839E;
	mov.f32 	%f562, 0fB94CA1F9;
	fma.rn.f32 	%f1087, %f562, %f122, %f561;

BB0_72:
	@%p49 bra 	BB0_74;

	mov.f32 	%f563, 0f3D2AAAA5;
	fma.rn.f32 	%f564, %f1087, %f122, %f563;
	mov.f32 	%f565, 0fBF000000;
	fma.rn.f32 	%f1088, %f564, %f122, %f565;
	bra.uni 	BB0_75;

BB0_74:
	mov.f32 	%f566, 0fBE2AAAA3;
	fma.rn.f32 	%f567, %f1087, %f122, %f566;
	mov.f32 	%f568, 0f00000000;
	fma.rn.f32 	%f1088, %f567, %f122, %f568;

BB0_75:
	fma.rn.f32 	%f1089, %f1088, %f1086, %f1086;
	@%p49 bra 	BB0_77;

	mov.f32 	%f569, 0f3F800000;
	fma.rn.f32 	%f1089, %f1088, %f122, %f569;

BB0_77:
	and.b32  	%r439, %r106, 2;
	setp.eq.s32	%p52, %r439, 0;
	@%p52 bra 	BB0_79;

	mov.f32 	%f570, 0f00000000;
	mov.f32 	%f571, 0fBF800000;
	fma.rn.f32 	%f1089, %f1089, %f571, %f570;

BB0_79:
	@%p40 bra 	BB0_81;

	mov.f32 	%f572, 0f00000000;
	mul.rn.f32 	%f1091, %f1091, %f572;

BB0_81:
	mul.f32 	%f573, %f1091, 0f3F22F983;
	cvt.rni.s32.f32	%r724, %f573;
	cvt.rn.f32.s32	%f574, %r724;
	neg.f32 	%f575, %f574;
	fma.rn.f32 	%f577, %f575, %f553, %f1091;
	fma.rn.f32 	%f579, %f575, %f555, %f577;
	fma.rn.f32 	%f1092, %f575, %f557, %f579;
	abs.f32 	%f581, %f1091;
	setp.leu.f32	%p54, %f581, 0f47CE4780;
	@%p54 bra 	BB0_92;

	mov.b32 	 %r109, %f1091;
	shr.u32 	%r110, %r109, 23;
	shl.b32 	%r442, %r109, 8;
	or.b32  	%r111, %r442, -2147483648;
	add.u64 	%rd146, %SP, 0;
	cvta.to.local.u64 	%rd242, %rd146;
	mov.u64 	%rd241, __cudart_i2opi_f;
	mov.u32 	%r715, -6;
	mov.u32 	%r716, %r362;

BB0_83:
	.pragma "nounroll";
	ld.const.u32 	%r445, [%rd241];
	// inline asm
	{
	mad.lo.cc.u32   %r443, %r445, %r111, %r716;
	madc.hi.u32     %r716, %r445, %r111,  0;
	}
	// inline asm
	st.local.u32 	[%rd242], %r443;
	add.s64 	%rd242, %rd242, 4;
	add.s64 	%rd241, %rd241, 4;
	add.s32 	%r715, %r715, 1;
	setp.ne.s32	%p55, %r715, 0;
	@%p55 bra 	BB0_83;

	and.b32  	%r448, %r110, 255;
	add.s32 	%r449, %r448, -128;
	shr.u32 	%r450, %r449, 5;
	and.b32  	%r116, %r109, -2147483648;
	cvta.to.local.u64 	%rd148, %rd146;
	st.local.u32 	[%rd148+24], %r716;
	mov.u32 	%r451, 6;
	sub.s32 	%r452, %r451, %r450;
	mul.wide.s32 	%rd149, %r452, 4;
	add.s64 	%rd26, %rd148, %rd149;
	ld.local.u32 	%r717, [%rd26];
	ld.local.u32 	%r718, [%rd26+-4];
	and.b32  	%r119, %r110, 31;
	setp.eq.s32	%p56, %r119, 0;
	@%p56 bra 	BB0_86;

	sub.s32 	%r454, %r385, %r119;
	shr.u32 	%r455, %r718, %r454;
	shl.b32 	%r456, %r717, %r119;
	add.s32 	%r717, %r455, %r456;
	ld.local.u32 	%r457, [%rd26+-8];
	shr.u32 	%r458, %r457, %r454;
	shl.b32 	%r459, %r718, %r119;
	add.s32 	%r718, %r458, %r459;

BB0_86:
	shr.u32 	%r460, %r718, 30;
	shl.b32 	%r461, %r717, 2;
	add.s32 	%r719, %r460, %r461;
	shl.b32 	%r125, %r718, 2;
	shr.u32 	%r462, %r719, 31;
	shr.u32 	%r463, %r717, 30;
	add.s32 	%r126, %r462, %r463;
	setp.eq.s32	%p57, %r462, 0;
	@%p57 bra 	BB0_87;

	not.b32 	%r464, %r719;
	neg.s32 	%r721, %r125;
	setp.eq.s32	%p58, %r125, 0;
	selp.u32	%r465, 1, 0, %p58;
	add.s32 	%r719, %r465, %r464;
	xor.b32  	%r720, %r116, -2147483648;
	bra.uni 	BB0_89;

BB0_87:
	mov.u32 	%r720, %r116;
	mov.u32 	%r721, %r125;

BB0_89:
	clz.b32 	%r723, %r719;
	setp.eq.s32	%p59, %r723, 0;
	shl.b32 	%r466, %r719, %r723;
	sub.s32 	%r468, %r385, %r723;
	shr.u32 	%r469, %r721, %r468;
	add.s32 	%r470, %r469, %r466;
	selp.b32	%r134, %r719, %r470, %p59;
	mov.u32 	%r471, -921707870;
	mul.hi.u32 	%r722, %r134, %r471;
	setp.eq.s32	%p60, %r116, 0;
	neg.s32 	%r472, %r126;
	selp.b32	%r724, %r126, %r472, %p60;
	setp.lt.s32	%p61, %r722, 1;
	@%p61 bra 	BB0_91;

	mul.lo.s32 	%r473, %r134, -921707870;
	shr.u32 	%r474, %r473, 31;
	shl.b32 	%r475, %r722, 1;
	add.s32 	%r722, %r474, %r475;
	add.s32 	%r723, %r723, 1;

BB0_91:
	mov.u32 	%r476, 126;
	sub.s32 	%r477, %r476, %r723;
	shl.b32 	%r478, %r477, 23;
	add.s32 	%r479, %r722, 1;
	shr.u32 	%r480, %r479, 7;
	add.s32 	%r481, %r480, 1;
	shr.u32 	%r482, %r481, 1;
	add.s32 	%r483, %r482, %r478;
	or.b32  	%r484, %r483, %r720;
	mov.b32 	 %f1092, %r484;

BB0_92:
	mul.rn.f32 	%f139, %f1092, %f1092;
	and.b32  	%r142, %r724, 1;
	setp.eq.s32	%p62, %r142, 0;
	@%p62 bra 	BB0_94;

	mov.f32 	%f582, 0fBAB6061A;
	mov.f32 	%f583, 0f37CCF5CE;
	fma.rn.f32 	%f1093, %f583, %f139, %f582;
	bra.uni 	BB0_95;

BB0_94:
	mov.f32 	%f584, 0f3C08839E;
	mov.f32 	%f585, 0fB94CA1F9;
	fma.rn.f32 	%f1093, %f585, %f139, %f584;

BB0_95:
	@%p62 bra 	BB0_97;

	mov.f32 	%f586, 0f3D2AAAA5;
	fma.rn.f32 	%f587, %f1093, %f139, %f586;
	mov.f32 	%f588, 0fBF000000;
	fma.rn.f32 	%f1094, %f587, %f139, %f588;
	bra.uni 	BB0_98;

BB0_97:
	mov.f32 	%f589, 0fBE2AAAA3;
	fma.rn.f32 	%f590, %f1093, %f139, %f589;
	mov.f32 	%f591, 0f00000000;
	fma.rn.f32 	%f1094, %f590, %f139, %f591;

BB0_98:
	fma.rn.f32 	%f1095, %f1094, %f1092, %f1092;
	@%p62 bra 	BB0_100;

	mov.f32 	%f592, 0f3F800000;
	fma.rn.f32 	%f1095, %f1094, %f139, %f592;

BB0_100:
	and.b32  	%r485, %r724, 2;
	setp.eq.s32	%p65, %r485, 0;
	@%p65 bra 	BB0_102;

	mov.f32 	%f593, 0f00000000;
	mov.f32 	%f594, 0fBF800000;
	fma.rn.f32 	%f1095, %f1095, %f594, %f593;

BB0_102:
	mul.f32 	%f598, %f114, %f1089;
	mul.f32 	%f599, %f598, %f598;
	mov.f32 	%f1097, 0f3F800000;
	sub.f32 	%f601, %f1097, %f599;
	mul.f32 	%f602, %f114, %f1095;
	mul.f32 	%f603, %f602, %f602;
	sub.f32 	%f604, %f601, %f603;
	mov.f32 	%f1100, 0f00000000;
	max.f32 	%f605, %f1100, %f604;
	sqrt.rn.f32 	%f606, %f605;
	mul.f32 	%f607, %f111, %f602;
	mul.f32 	%f608, %f112, %f602;
	mul.f32 	%f609, %f113, %f602;
	mul.f32 	%f610, %f109, %f112;
	mul.f32 	%f611, %f110, %f113;
	sub.f32 	%f612, %f610, %f611;
	fma.rn.f32 	%f613, %f612, %f598, %f607;
	mul.f32 	%f614, %f108, %f113;
	mul.f32 	%f615, %f109, %f111;
	sub.f32 	%f616, %f614, %f615;
	fma.rn.f32 	%f617, %f616, %f598, %f608;
	mul.f32 	%f618, %f110, %f111;
	mul.f32 	%f619, %f108, %f112;
	sub.f32 	%f620, %f618, %f619;
	fma.rn.f32 	%f621, %f620, %f598, %f609;
	fma.rn.f32 	%f151, %f108, %f606, %f613;
	fma.rn.f32 	%f152, %f110, %f606, %f617;
	fma.rn.f32 	%f153, %f109, %f606, %f621;
	add.u64 	%rd150, %SP, 28;
	cvta.to.local.u64 	%rd27, %rd150;
	st.local.u32 	[%rd27], %r362;
	setp.gt.f32	%p66, %f152, 0f00000000;
	setp.eq.f32	%p67, %f103, 0f00000000;
	or.pred  	%p68, %p67, %p66;
	mov.f32 	%f1101, %f1100;
	mov.f32 	%f1102, %f1100;
	@!%p68 bra 	BB0_106;
	bra.uni 	BB0_103;

BB0_103:
	mov.u32 	%r490, 1065353216;
	st.local.u32 	[%rd27], %r490;
	mul.f32 	%f633, %f72, 0f3456BF95;
	abs.f32 	%f634, %f633;
	mul.f32 	%f635, %f73, 0f3456BF95;
	abs.f32 	%f636, %f635;
	mul.f32 	%f637, %f74, 0f3456BF95;
	abs.f32 	%f638, %f637;
	max.f32 	%f639, %f634, %f636;
	max.f32 	%f640, %f639, %f638;
	max.f32 	%f628, %f640, %f511;
	ld.global.u32 	%r487, [root];
	mov.f32 	%f629, 0f6C4ECB8F;
	mov.u32 	%r489, 4;
	// inline asm
	call _rt_trace_64, (%r487, %f72, %f73, %f74, %f151, %f152, %f153, %r384, %f628, %f629, %rd150, %r489);
	// inline asm
	setp.leu.f32	%p69, %f101, 0f00000000;
	mov.f32 	%f1098, %f1097;
	mov.f32 	%f1099, %f1097;
	@%p69 bra 	BB0_105;

	cvt.rzi.s32.f32	%r491, %f102;
	neg.f32 	%f648, %f151;
	neg.f32 	%f647, %f152;
	neg.f32 	%f646, %f153;
	mov.u32 	%r492, 6;
	// inline asm
	call (%f1097, %f1098, %f1099, %f645), _rt_texture_get_base_id, (%r491, %r492, %f646, %f647, %f648, %r362);
	// inline asm

BB0_105:
	ld.local.f32 	%f649, [%rd27];
	fma.rn.f32 	%f1100, %f1097, %f649, 0f00000000;
	fma.rn.f32 	%f1101, %f1098, %f649, 0f00000000;
	fma.rn.f32 	%f1102, %f1099, %f649, 0f00000000;

BB0_106:
	ld.global.u32 	%r494, [bounceFlag];
	setp.lt.s32	%p70, %r494, 1;
	@%p70 bra 	BB0_108;

	add.f32 	%f650, %f107, 0fBF800000;
	mul.f32 	%f651, %f650, 0f42C80000;
	mul.f32 	%f1100, %f651, %f1100;
	mul.f32 	%f1101, %f651, %f1101;
	mul.f32 	%f1102, %f651, %f1102;

BB0_108:
	cvt.rn.f32.u32	%f652, %r72;
	mul.f32 	%f653, %f104, %f1100;
	mul.f32 	%f1122, %f652, %f653;
	mul.f32 	%f654, %f105, %f1101;
	mul.f32 	%f1123, %f652, %f654;
	mul.f32 	%f655, %f106, %f1102;
	mul.f32 	%f1124, %f652, %f655;
	bra.uni 	BB0_160;

BB0_119:
	mov.u32 	%r730, %r151;
	mov.u32 	%r731, %r160;

BB0_121:
	clz.b32 	%r733, %r729;
	setp.eq.s32	%p80, %r733, 0;
	shl.b32 	%r521, %r729, %r733;
	sub.s32 	%r523, %r385, %r733;
	shr.u32 	%r524, %r731, %r523;
	add.s32 	%r525, %r524, %r521;
	selp.b32	%r169, %r729, %r525, %p80;
	mov.u32 	%r526, -921707870;
	mul.hi.u32 	%r732, %r169, %r526;
	setp.eq.s32	%p81, %r151, 0;
	neg.s32 	%r527, %r161;
	selp.b32	%r734, %r161, %r527, %p81;
	setp.lt.s32	%p82, %r732, 1;
	@%p82 bra 	BB0_123;

	mul.lo.s32 	%r528, %r169, -921707870;
	shr.u32 	%r529, %r528, 31;
	shl.b32 	%r530, %r732, 1;
	add.s32 	%r732, %r529, %r530;
	add.s32 	%r733, %r733, 1;

BB0_123:
	mov.u32 	%r531, 126;
	sub.s32 	%r532, %r531, %r733;
	shl.b32 	%r533, %r532, 23;
	add.s32 	%r534, %r732, 1;
	shr.u32 	%r535, %r534, 7;
	add.s32 	%r536, %r535, 1;
	shr.u32 	%r537, %r536, 1;
	add.s32 	%r538, %r537, %r533;
	or.b32  	%r539, %r538, %r730;
	mov.b32 	 %f1107, %r539;

BB0_124:
	mul.rn.f32 	%f188, %f1107, %f1107;
	add.s32 	%r177, %r734, 1;
	and.b32  	%r178, %r177, 1;
	setp.eq.s32	%p83, %r178, 0;
	@%p83 bra 	BB0_126;

	mov.f32 	%f690, 0fBAB6061A;
	mov.f32 	%f691, 0f37CCF5CE;
	fma.rn.f32 	%f1108, %f691, %f188, %f690;
	bra.uni 	BB0_127;

BB0_126:
	mov.f32 	%f692, 0f3C08839E;
	mov.f32 	%f693, 0fB94CA1F9;
	fma.rn.f32 	%f1108, %f693, %f188, %f692;

BB0_127:
	@%p83 bra 	BB0_129;

	mov.f32 	%f694, 0f3D2AAAA5;
	fma.rn.f32 	%f695, %f1108, %f188, %f694;
	mov.f32 	%f696, 0fBF000000;
	fma.rn.f32 	%f1109, %f695, %f188, %f696;
	bra.uni 	BB0_130;

BB0_129:
	mov.f32 	%f697, 0fBE2AAAA3;
	fma.rn.f32 	%f698, %f1108, %f188, %f697;
	mov.f32 	%f699, 0f00000000;
	fma.rn.f32 	%f1109, %f698, %f188, %f699;

BB0_130:
	fma.rn.f32 	%f1110, %f1109, %f1107, %f1107;
	@%p83 bra 	BB0_132;

	mov.f32 	%f700, 0f3F800000;
	fma.rn.f32 	%f1110, %f1109, %f188, %f700;

BB0_132:
	and.b32  	%r540, %r177, 2;
	setp.eq.s32	%p86, %r540, 0;
	@%p86 bra 	BB0_134;

	mov.f32 	%f701, 0f00000000;
	mov.f32 	%f702, 0fBF800000;
	fma.rn.f32 	%f1110, %f1110, %f702, %f701;

BB0_134:
	@%p74 bra 	BB0_136;

	mov.f32 	%f703, 0f00000000;
	mul.rn.f32 	%f1112, %f1112, %f703;

BB0_136:
	mul.f32 	%f704, %f1112, 0f3F22F983;
	cvt.rni.s32.f32	%r744, %f704;
	cvt.rn.f32.s32	%f705, %r744;
	neg.f32 	%f706, %f705;
	fma.rn.f32 	%f708, %f706, %f684, %f1112;
	fma.rn.f32 	%f710, %f706, %f686, %f708;
	fma.rn.f32 	%f1113, %f706, %f688, %f710;
	abs.f32 	%f712, %f1112;
	setp.leu.f32	%p88, %f712, 0f47CE4780;
	@%p88 bra 	BB0_147;

	mov.b32 	 %r180, %f1112;
	shr.u32 	%r181, %r180, 23;
	shl.b32 	%r543, %r180, 8;
	or.b32  	%r182, %r543, -2147483648;
	mov.u32 	%r736, 0;
	mov.u64 	%rd245, __cudart_i2opi_f;
	mov.u32 	%r735, -6;
	mov.u64 	%rd246, %rd28;

BB0_138:
	.pragma "nounroll";
	ld.const.u32 	%r546, [%rd245];
	// inline asm
	{
	mad.lo.cc.u32   %r544, %r546, %r182, %r736;
	madc.hi.u32     %r736, %r546, %r182,  0;
	}
	// inline asm
	st.local.u32 	[%rd246], %r544;
	add.s64 	%rd246, %rd246, 4;
	add.s64 	%rd245, %rd245, 4;
	add.s32 	%r735, %r735, 1;
	setp.ne.s32	%p89, %r735, 0;
	@%p89 bra 	BB0_138;

	and.b32  	%r549, %r181, 255;
	add.s32 	%r550, %r549, -128;
	shr.u32 	%r551, %r550, 5;
	and.b32  	%r187, %r180, -2147483648;
	st.local.u32 	[%rd29], %r736;
	mov.u32 	%r552, 6;
	sub.s32 	%r553, %r552, %r551;
	mul.wide.s32 	%rd156, %r553, 4;
	add.s64 	%rd39, %rd28, %rd156;
	ld.local.u32 	%r737, [%rd39];
	ld.local.u32 	%r738, [%rd39+-4];
	and.b32  	%r190, %r181, 31;
	setp.eq.s32	%p90, %r190, 0;
	@%p90 bra 	BB0_141;

	sub.s32 	%r555, %r385, %r190;
	shr.u32 	%r556, %r738, %r555;
	shl.b32 	%r557, %r737, %r190;
	add.s32 	%r737, %r556, %r557;
	ld.local.u32 	%r558, [%rd39+-8];
	shr.u32 	%r559, %r558, %r555;
	shl.b32 	%r560, %r738, %r190;
	add.s32 	%r738, %r559, %r560;

BB0_141:
	shr.u32 	%r561, %r738, 30;
	shl.b32 	%r562, %r737, 2;
	add.s32 	%r739, %r561, %r562;
	shl.b32 	%r196, %r738, 2;
	shr.u32 	%r563, %r739, 31;
	shr.u32 	%r564, %r737, 30;
	add.s32 	%r197, %r563, %r564;
	setp.eq.s32	%p91, %r563, 0;
	@%p91 bra 	BB0_142;

	not.b32 	%r565, %r739;
	neg.s32 	%r741, %r196;
	setp.eq.s32	%p92, %r196, 0;
	selp.u32	%r566, 1, 0, %p92;
	add.s32 	%r739, %r566, %r565;
	xor.b32  	%r740, %r187, -2147483648;
	bra.uni 	BB0_144;

BB0_142:
	mov.u32 	%r740, %r187;
	mov.u32 	%r741, %r196;

BB0_144:
	clz.b32 	%r743, %r739;
	setp.eq.s32	%p93, %r743, 0;
	shl.b32 	%r567, %r739, %r743;
	sub.s32 	%r569, %r385, %r743;
	shr.u32 	%r570, %r741, %r569;
	add.s32 	%r571, %r570, %r567;
	selp.b32	%r205, %r739, %r571, %p93;
	mov.u32 	%r572, -921707870;
	mul.hi.u32 	%r742, %r205, %r572;
	setp.eq.s32	%p94, %r187, 0;
	neg.s32 	%r573, %r197;
	selp.b32	%r744, %r197, %r573, %p94;
	setp.lt.s32	%p95, %r742, 1;
	@%p95 bra 	BB0_146;

	mul.lo.s32 	%r574, %r205, -921707870;
	shr.u32 	%r575, %r574, 31;
	shl.b32 	%r576, %r742, 1;
	add.s32 	%r742, %r575, %r576;
	add.s32 	%r743, %r743, 1;

BB0_146:
	mov.u32 	%r577, 126;
	sub.s32 	%r578, %r577, %r743;
	shl.b32 	%r579, %r578, 23;
	add.s32 	%r580, %r742, 1;
	shr.u32 	%r581, %r580, 7;
	add.s32 	%r582, %r581, 1;
	shr.u32 	%r583, %r582, 1;
	add.s32 	%r584, %r583, %r579;
	or.b32  	%r585, %r584, %r740;
	mov.b32 	 %f1113, %r585;

BB0_147:
	mul.rn.f32 	%f205, %f1113, %f1113;
	and.b32  	%r213, %r744, 1;
	setp.eq.s32	%p96, %r213, 0;
	@%p96 bra 	BB0_149;

	mov.f32 	%f713, 0fBAB6061A;
	mov.f32 	%f714, 0f37CCF5CE;
	fma.rn.f32 	%f1114, %f714, %f205, %f713;
	bra.uni 	BB0_150;

BB0_149:
	mov.f32 	%f715, 0f3C08839E;
	mov.f32 	%f716, 0fB94CA1F9;
	fma.rn.f32 	%f1114, %f716, %f205, %f715;

BB0_150:
	@%p96 bra 	BB0_152;

	mov.f32 	%f717, 0f3D2AAAA5;
	fma.rn.f32 	%f718, %f1114, %f205, %f717;
	mov.f32 	%f719, 0fBF000000;
	fma.rn.f32 	%f1115, %f718, %f205, %f719;
	bra.uni 	BB0_153;

BB0_152:
	mov.f32 	%f720, 0fBE2AAAA3;
	fma.rn.f32 	%f721, %f1114, %f205, %f720;
	mov.f32 	%f722, 0f00000000;
	fma.rn.f32 	%f1115, %f721, %f205, %f722;

BB0_153:
	fma.rn.f32 	%f1116, %f1115, %f1113, %f1113;
	@%p96 bra 	BB0_155;

	mov.f32 	%f723, 0f3F800000;
	fma.rn.f32 	%f1116, %f1115, %f205, %f723;

BB0_155:
	and.b32  	%r586, %r744, 2;
	setp.eq.s32	%p99, %r586, 0;
	@%p99 bra 	BB0_157;

	mov.f32 	%f724, 0f00000000;
	mov.f32 	%f725, 0fBF800000;
	fma.rn.f32 	%f1116, %f1116, %f725, %f724;

BB0_157:
	mul.f32 	%f734, %f180, %f1110;
	mul.f32 	%f735, %f734, %f734;
	mov.f32 	%f736, 0f3F800000;
	sub.f32 	%f737, %f736, %f735;
	mul.f32 	%f738, %f180, %f1116;
	mul.f32 	%f739, %f738, %f738;
	sub.f32 	%f740, %f737, %f739;
	mov.f32 	%f741, 0f00000000;
	max.f32 	%f742, %f741, %f740;
	sqrt.rn.f32 	%f743, %f742;
	mul.f32 	%f744, %f177, %f738;
	mul.f32 	%f745, %f178, %f738;
	mul.f32 	%f746, %f179, %f738;
	mul.f32 	%f747, %f102, %f179;
	mul.f32 	%f748, %f96, %f178;
	sub.f32 	%f749, %f748, %f747;
	fma.rn.f32 	%f750, %f749, %f734, %f744;
	mul.f32 	%f751, %f96, %f177;
	mul.f32 	%f752, %f101, %f179;
	sub.f32 	%f753, %f752, %f751;
	fma.rn.f32 	%f754, %f753, %f734, %f745;
	mul.f32 	%f755, %f101, %f178;
	mul.f32 	%f756, %f102, %f177;
	sub.f32 	%f757, %f756, %f755;
	fma.rn.f32 	%f758, %f757, %f734, %f746;
	fma.rn.f32 	%f759, %f101, %f743, %f750;
	fma.rn.f32 	%f760, %f102, %f743, %f754;
	fma.rn.f32 	%f761, %f96, %f743, %f758;
	add.f32 	%f762, %f101, %f759;
	add.f32 	%f763, %f102, %f760;
	add.f32 	%f764, %f96, %f761;
	mul.f32 	%f765, %f103, %f762;
	mul.f32 	%f766, %f103, %f763;
	mul.f32 	%f767, %f103, %f764;
	sub.f32 	%f768, %f765, %f101;
	sub.f32 	%f769, %f766, %f102;
	sub.f32 	%f770, %f767, %f96;
	mul.f32 	%f771, %f769, %f769;
	fma.rn.f32 	%f772, %f768, %f768, %f771;
	fma.rn.f32 	%f773, %f770, %f770, %f772;
	sqrt.rn.f32 	%f774, %f773;
	rcp.rn.f32 	%f775, %f774;
	mul.f32 	%f729, %f775, %f768;
	mul.f32 	%f730, %f775, %f769;
	mul.f32 	%f731, %f775, %f770;
	mul.f32 	%f776, %f72, 0f3456BF95;
	abs.f32 	%f777, %f776;
	mul.f32 	%f778, %f73, 0f3456BF95;
	abs.f32 	%f779, %f778;
	mul.f32 	%f780, %f74, 0f3456BF95;
	abs.f32 	%f781, %f780;
	max.f32 	%f782, %f777, %f779;
	max.f32 	%f783, %f782, %f781;
	max.f32 	%f732, %f783, %f511;
	add.u64 	%rd157, %SP, 28;
	cvta.to.local.u64 	%rd158, %rd157;
	mov.u32 	%r590, 1065353216;
	st.local.u32 	[%rd158], %r590;
	ld.global.u32 	%r587, [root];
	mov.f32 	%f733, 0f6C4ECB8F;
	mov.u32 	%r589, 4;
	// inline asm
	call _rt_trace_64, (%r587, %f72, %f73, %f74, %f729, %f730, %f731, %r384, %f732, %f733, %rd157, %r589);
	// inline asm
	ld.local.f32 	%f1118, [%rd158];

BB0_158:
	ld.global.u32 	%r591, [bounceFlag];
	setp.gt.s32	%p100, %r591, 0;
	mul.f32 	%f785, %f107, 0f42C80000;
	mul.f32 	%f786, %f176, %f1118;
	mul.f32 	%f787, %f785, %f786;
	selp.f32	%f788, %f787, %f786, %p100;
	mul.f32 	%f1119, %f104, %f788;
	mul.f32 	%f1120, %f105, %f788;
	mul.f32 	%f1121, %f106, %f788;

BB0_159:
	cvt.rn.f32.u32	%f789, %r72;
	mul.f32 	%f1122, %f789, %f1119;
	mul.f32 	%f1123, %f789, %f1120;
	mul.f32 	%f1124, %f789, %f1121;

BB0_160:
	mov.u64 	%rd164, localLights;
	cvta.global.u64 	%rd163, %rd164;
	mov.u32 	%r593, 96;
	// inline asm
	call (%rd159, %rd160, %rd161, %rd162), _rt_buffer_get_size_64, (%rd163, %r384, %r593);
	// inline asm
	cvt.u32.u64	%r594, %rd159;
	setp.eq.s32	%p101, %r594, 0;
	mov.u16 	%rs13, 0;
	@%p101 bra 	BB0_187;

	ld.global.f32 	%f797, [cameraPos];
	sub.f32 	%f794, %f72, %f797;
	ld.global.f32 	%f798, [cameraPos+4];
	sub.f32 	%f795, %f73, %f798;
	ld.global.f32 	%f799, [cameraPos+8];
	sub.f32 	%f796, %f74, %f799;
	ld.global.u32 	%r595, [tileCubemap];
	mov.u32 	%r596, 6;
	mov.u32 	%r597, 0;
	// inline asm
	call (%f790, %f791, %f792, %f793), _rt_texture_get_base_id, (%r595, %r596, %f794, %f795, %f796, %r597);
	// inline asm
	mov.b32 	 %r214, %f791;
	setp.eq.s32	%p102, %r214, 0;
	@%p102 bra 	BB0_187;

	mov.b32 	 %r602, %f790;
	cvt.rn.f32.u32	%f235, %r214;
	mul.f32 	%f802, %f3, %f235;
	cvt.rzi.u32.f32	%r603, %f802;
	add.s32 	%r604, %r214, -1;
	min.u32 	%r605, %r603, %r604;
	add.s32 	%r606, %r605, %r602;
	cvt.u64.u32	%rd167, %r606;
	mov.u64 	%rd177, localLightIndices;
	cvta.global.u64 	%rd166, %rd177;
	mov.u32 	%r599, 4;
	mov.u64 	%rd176, 0;
	// inline asm
	call (%rd165), _rt_buffer_get_64, (%rd166, %r384, %r599, %rd167, %rd176, %rd176, %rd176);
	// inline asm
	ld.u32 	%rd173, [%rd165];
	// inline asm
	call (%rd171), _rt_buffer_get_64, (%rd163, %r384, %r593, %rd173, %rd176, %rd176, %rd176);
	// inline asm
	ld.v4.f32 	{%f803, %f804, %f805, %f806}, [%rd171+80];
	ld.v4.f32 	{%f807, %f808, %f809, %f810}, [%rd171+64];
	ld.v4.f32 	{%f811, %f812, %f813, %f814}, [%rd171+48];
	ld.v4.f32 	{%f1128, %f1129, %f1130, %f818}, [%rd171+32];
	ld.v4.f32 	{%f819, %f820, %f821, %f822}, [%rd171+16];
	ld.v4.f32 	{%f823, %f824, %f825, %f826}, [%rd171];
	sub.f32 	%f827, %f824, %f72;
	sub.f32 	%f828, %f825, %f73;
	sub.f32 	%f829, %f826, %f74;
	mul.f32 	%f830, %f828, %f828;
	fma.rn.f32 	%f831, %f827, %f827, %f830;
	fma.rn.f32 	%f832, %f829, %f829, %f831;
	sqrt.rn.f32 	%f263, %f832;
	rcp.rn.f32 	%f833, %f263;
	mul.f32 	%f264, %f827, %f833;
	mul.f32 	%f265, %f828, %f833;
	mul.f32 	%f266, %f829, %f833;
	mul.f32 	%f267, %f822, %f263;
	mov.f32 	%f837, 0f40800000;
	abs.f32 	%f269, %f267;
	setp.lt.f32	%p103, %f269, 0f00800000;
	mul.f32 	%f839, %f269, 0f4B800000;
	selp.f32	%f840, 0fC3170000, 0fC2FE0000, %p103;
	selp.f32	%f841, %f839, %f269, %p103;
	mov.b32 	 %r607, %f841;
	and.b32  	%r608, %r607, 8388607;
	or.b32  	%r609, %r608, 1065353216;
	mov.b32 	 %f842, %r609;
	shr.u32 	%r610, %r607, 23;
	cvt.rn.f32.u32	%f843, %r610;
	add.f32 	%f844, %f840, %f843;
	setp.gt.f32	%p104, %f842, 0f3FB504F3;
	mul.f32 	%f845, %f842, 0f3F000000;
	add.f32 	%f846, %f844, 0f3F800000;
	selp.f32	%f847, %f845, %f842, %p104;
	selp.f32	%f848, %f846, %f844, %p104;
	add.f32 	%f849, %f847, 0fBF800000;
	add.f32 	%f801, %f847, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f800,%f801;
	// inline asm
	add.f32 	%f850, %f849, %f849;
	mul.f32 	%f851, %f800, %f850;
	mul.f32 	%f852, %f851, %f851;
	mov.f32 	%f853, 0f3C4CAF63;
	mov.f32 	%f854, 0f3B18F0FE;
	fma.rn.f32 	%f855, %f854, %f852, %f853;
	mov.f32 	%f856, 0f3DAAAABD;
	fma.rn.f32 	%f857, %f855, %f852, %f856;
	mul.rn.f32 	%f858, %f857, %f852;
	mul.rn.f32 	%f859, %f858, %f851;
	sub.f32 	%f860, %f849, %f851;
	neg.f32 	%f861, %f851;
	add.f32 	%f862, %f860, %f860;
	fma.rn.f32 	%f863, %f861, %f849, %f862;
	mul.rn.f32 	%f864, %f800, %f863;
	add.f32 	%f865, %f859, %f851;
	sub.f32 	%f866, %f851, %f865;
	add.f32 	%f867, %f859, %f866;
	add.f32 	%f868, %f864, %f867;
	add.f32 	%f869, %f865, %f868;
	sub.f32 	%f870, %f865, %f869;
	add.f32 	%f871, %f868, %f870;
	mov.f32 	%f872, 0f3F317200;
	mul.rn.f32 	%f873, %f848, %f872;
	mov.f32 	%f874, 0f35BFBE8E;
	mul.rn.f32 	%f875, %f848, %f874;
	add.f32 	%f876, %f873, %f869;
	sub.f32 	%f877, %f873, %f876;
	add.f32 	%f878, %f869, %f877;
	add.f32 	%f879, %f871, %f878;
	add.f32 	%f880, %f875, %f879;
	add.f32 	%f881, %f876, %f880;
	sub.f32 	%f882, %f876, %f881;
	add.f32 	%f883, %f880, %f882;
	mul.rn.f32 	%f270, %f837, %f881;
	neg.f32 	%f884, %f270;
	fma.rn.f32 	%f885, %f837, %f881, %f884;
	fma.rn.f32 	%f886, %f837, %f883, %f885;
	mov.f32 	%f887, 0f00000000;
	fma.rn.f32 	%f271, %f887, %f881, %f886;
	add.rn.f32 	%f272, %f270, %f271;
	mov.b32 	 %r611, %f272;
	setp.eq.s32	%p1, %r611, 1118925336;
	add.s32 	%r612, %r611, -1;
	mov.b32 	 %f888, %r612;
	selp.f32	%f889, %f888, %f272, %p1;
	mul.f32 	%f890, %f889, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f891, %f890;
	mov.f32 	%f892, 0fBF317200;
	fma.rn.f32 	%f893, %f891, %f892, %f889;
	mov.f32 	%f894, 0fB5BFBE8E;
	fma.rn.f32 	%f895, %f891, %f894, %f893;
	mul.f32 	%f896, %f895, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f897, %f896;
	add.f32 	%f898, %f891, 0f00000000;
	ex2.approx.f32 	%f899, %f898;
	mul.f32 	%f900, %f897, %f899;
	setp.lt.f32	%p105, %f889, 0fC2D20000;
	selp.f32	%f901, 0f00000000, %f900, %p105;
	setp.gt.f32	%p106, %f889, 0f42D20000;
	selp.f32	%f1125, 0f7F800000, %f901, %p106;
	setp.eq.f32	%p107, %f1125, 0f7F800000;
	@%p107 bra 	BB0_164;

	neg.f32 	%f902, %f272;
	add.rn.f32 	%f903, %f270, %f902;
	add.rn.f32 	%f904, %f903, %f271;
	add.f32 	%f905, %f904, 0f37000000;
	selp.f32	%f906, %f905, %f904, %p1;
	fma.rn.f32 	%f1125, %f1125, %f906, %f1125;

BB0_164:
	mov.f32 	%f1057, 0f40000000;
	cvt.rzi.f32.f32	%f1056, %f1057;
	add.f32 	%f1055, %f1056, %f1056;
	mov.f32 	%f1054, 0f40800000;
	sub.f32 	%f1053, %f1054, %f1055;
	abs.f32 	%f1052, %f1053;
	setp.lt.f32	%p108, %f267, 0f00000000;
	setp.eq.f32	%p109, %f1052, 0f3F800000;
	and.pred  	%p2, %p108, %p109;
	mov.b32 	 %r613, %f1125;
	xor.b32  	%r614, %r613, -2147483648;
	mov.b32 	 %f907, %r614;
	selp.f32	%f1127, %f907, %f1125, %p2;
	setp.eq.f32	%p110, %f267, 0f00000000;
	@%p110 bra 	BB0_167;
	bra.uni 	BB0_165;

BB0_167:
	add.f32 	%f910, %f267, %f267;
	selp.f32	%f1127, %f910, 0f00000000, %p109;
	bra.uni 	BB0_168;

BB0_165:
	setp.geu.f32	%p111, %f267, 0f00000000;
	@%p111 bra 	BB0_168;

	mov.f32 	%f1060, 0f40800000;
	cvt.rzi.f32.f32	%f909, %f1060;
	setp.neu.f32	%p112, %f909, 0f40800000;
	selp.f32	%f1127, 0f7FFFFFFF, %f1127, %p112;

BB0_168:
	add.f32 	%f911, %f269, 0f40800000;
	mov.b32 	 %r615, %f911;
	setp.lt.s32	%p114, %r615, 2139095040;
	@%p114 bra 	BB0_173;

	setp.gtu.f32	%p115, %f269, 0f7F800000;
	@%p115 bra 	BB0_172;
	bra.uni 	BB0_170;

BB0_172:
	add.f32 	%f1127, %f267, 0f40800000;
	bra.uni 	BB0_173;

BB0_170:
	setp.neu.f32	%p116, %f269, 0f7F800000;
	@%p116 bra 	BB0_173;

	selp.f32	%f1127, 0fFF800000, 0f7F800000, %p2;

BB0_173:
	add.u64 	%rd232, %SP, 32;
	cvta.to.local.u64 	%rd231, %rd232;
	add.s64 	%rd230, %rd231, 12;
	mul.f32 	%f912, %f820, %f263;
	mov.f32 	%f1132, 0f3F800000;
	sub.f32 	%f914, %f1132, %f1127;
	setp.eq.f32	%p117, %f267, 0f3F800000;
	selp.f32	%f915, 0f00000000, %f914, %p117;
	cvt.sat.f32.f32	%f916, %f915;
	fma.rn.f32 	%f917, %f912, %f912, %f821;
	div.rn.f32 	%f1131, %f916, %f917;
	ld.local.f32 	%f918, [%rd230+-12];
	ld.local.f32 	%f919, [%rd230+-8];
	mul.f32 	%f920, %f265, %f919;
	fma.rn.f32 	%f921, %f264, %f918, %f920;
	ld.local.f32 	%f922, [%rd230+-4];
	fma.rn.f32 	%f923, %f266, %f922, %f921;
	cvt.sat.f32.f32	%f299, %f923;
	setp.eq.f32	%p118, %f823, 0f3F800000;
	@%p118 bra 	BB0_179;
	bra.uni 	BB0_174;

BB0_179:
	setp.leu.f32	%p122, %f818, 0f00000000;
	@%p122 bra 	BB0_181;

	mov.u32 	%r684, 2;
	mul.f32 	%f954, %f803, %f264;
	mul.f32 	%f955, %f804, %f265;
	neg.f32 	%f956, %f955;
	sub.f32 	%f957, %f956, %f954;
	mul.f32 	%f958, %f805, %f266;
	sub.f32 	%f959, %f957, %f958;
	setp.gt.f32	%p123, %f959, 0f00000000;
	selp.f32	%f960, 0f3F800000, 0f00000000, %p123;
	mul.f32 	%f961, %f812, %f265;
	fma.rn.f32 	%f962, %f811, %f264, %f961;
	mul.f32 	%f963, %f808, %f265;
	fma.rn.f32 	%f964, %f807, %f264, %f963;
	fma.rn.f32 	%f965, %f813, %f266, %f962;
	fma.rn.f32 	%f966, %f809, %f266, %f964;
	fma.rn.f32 	%f967, %f814, %f965, 0f3F000000;
	mov.f32 	%f968, 0f3F800000;
	sub.f32 	%f950, %f968, %f967;
	fma.rn.f32 	%f951, %f814, %f966, 0f3F000000;
	cvt.rzi.s32.f32	%r619, %f818;
	mov.f32 	%f953, 0f00000000;
	// inline asm
	call (%f946, %f947, %f948, %f949), _rt_texture_get_f_id, (%r619, %r684, %f950, %f951, %f953, %f953);
	// inline asm
	mul.f32 	%f969, %f960, %f946;
	mul.f32 	%f970, %f960, %f947;
	mul.f32 	%f971, %f960, %f948;
	mul.f32 	%f1128, %f1128, %f969;
	mul.f32 	%f1129, %f1129, %f970;
	mul.f32 	%f1130, %f1130, %f971;
	bra.uni 	BB0_181;

BB0_174:
	setp.eq.f32	%p119, %f823, 0f40000000;
	@%p119 bra 	BB0_177;
	bra.uni 	BB0_175;

BB0_177:
	setp.leu.f32	%p121, %f818, 0f00000000;
	@%p121 bra 	BB0_181;

	mov.u32 	%r683, 0;
	mov.u32 	%r682, 6;
	mul.f32 	%f940, %f812, %f265;
	fma.rn.f32 	%f941, %f811, %f264, %f940;
	mul.f32 	%f942, %f808, %f265;
	fma.rn.f32 	%f943, %f807, %f264, %f942;
	mul.f32 	%f944, %f804, %f265;
	fma.rn.f32 	%f945, %f803, %f264, %f944;
	fma.rn.f32 	%f937, %f813, %f266, %f941;
	fma.rn.f32 	%f938, %f809, %f266, %f943;
	fma.rn.f32 	%f939, %f805, %f266, %f945;
	cvt.rzi.s32.f32	%r616, %f818;
	// inline asm
	call (%f933, %f934, %f935, %f936), _rt_texture_get_base_id, (%r616, %r682, %f937, %f938, %f939, %r683);
	// inline asm
	mul.f32 	%f1128, %f1128, %f933;
	mul.f32 	%f1129, %f1129, %f934;
	mul.f32 	%f1130, %f1130, %f935;
	bra.uni 	BB0_181;

BB0_175:
	setp.neu.f32	%p120, %f823, 0f40800000;
	@%p120 bra 	BB0_181;

	mul.f32 	%f924, %f803, %f264;
	mul.f32 	%f925, %f804, %f265;
	neg.f32 	%f926, %f925;
	sub.f32 	%f927, %f926, %f924;
	mul.f32 	%f928, %f805, %f266;
	sub.f32 	%f929, %f927, %f928;
	fma.rn.f32 	%f930, %f818, %f929, %f814;
	cvt.sat.f32.f32	%f931, %f930;
	mul.f32 	%f932, %f931, %f931;
	mul.f32 	%f1131, %f1131, %f932;

BB0_181:
	mov.f32 	%f1133, 0f00000000;
	max.f32 	%f975, %f1128, %f1129;
	max.f32 	%f976, %f975, %f1130;
	mul.f32 	%f311, %f299, %f1131;
	mul.f32 	%f977, %f311, %f976;
	setp.lt.f32	%p124, %f977, 0f3727C5AC;
	mov.f32 	%f1134, %f1133;
	mov.f32 	%f1135, %f1133;
	@%p124 bra 	BB0_185;

	add.u64 	%rd179, %SP, 0;
	cvta.to.local.u64 	%rd40, %rd179;
	mov.u32 	%r621, 1065353216;
	st.local.u32 	[%rd40], %r621;
	setp.leu.f32	%p125, %f806, 0f00000000;
	@%p125 bra 	BB0_184;

	mov.u32 	%r674, 4;
	mov.f32 	%f1059, 0f38D1B717;
	mov.u32 	%r673, 1;
	fma.rn.f32 	%f987, %f1, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f988, %f2, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f989, %f3, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f990, %f987, %f819, %f824;
	fma.rn.f32 	%f991, %f988, %f819, %f825;
	fma.rn.f32 	%f992, %f989, %f819, %f826;
	sub.f32 	%f993, %f990, %f72;
	sub.f32 	%f994, %f991, %f73;
	sub.f32 	%f995, %f992, %f74;
	mul.f32 	%f996, %f994, %f994;
	fma.rn.f32 	%f997, %f993, %f993, %f996;
	fma.rn.f32 	%f998, %f995, %f995, %f997;
	sqrt.rn.f32 	%f986, %f998;
	rcp.rn.f32 	%f999, %f986;
	mul.f32 	%f982, %f993, %f999;
	mul.f32 	%f983, %f994, %f999;
	mul.f32 	%f984, %f995, %f999;
	mul.f32 	%f1000, %f72, 0f3456BF95;
	abs.f32 	%f1001, %f1000;
	mul.f32 	%f1002, %f73, 0f3456BF95;
	abs.f32 	%f1003, %f1002;
	mul.f32 	%f1004, %f74, 0f3456BF95;
	abs.f32 	%f1005, %f1004;
	max.f32 	%f1006, %f1001, %f1003;
	max.f32 	%f1007, %f1006, %f1005;
	max.f32 	%f985, %f1007, %f1059;
	ld.global.u32 	%r622, [root];
	// inline asm
	call _rt_trace_64, (%r622, %f72, %f73, %f74, %f982, %f983, %f984, %r673, %f985, %f986, %rd179, %r674);
	// inline asm
	ld.local.f32 	%f1132, [%rd40];

BB0_184:
	ld.global.u32 	%r625, [bounceFlag];
	setp.gt.s32	%p126, %r625, 0;
	mul.f32 	%f1009, %f311, %f1132;
	mul.f32 	%f1010, %f810, %f1009;
	selp.f32	%f1011, %f1010, %f1009, %p126;
	mul.f32 	%f1133, %f1128, %f1011;
	mul.f32 	%f1134, %f1129, %f1011;
	mul.f32 	%f1135, %f1130, %f1011;

BB0_185:
	mov.u16 	%rs13, 0;
	fma.rn.f32 	%f1122, %f235, %f1133, %f1122;
	fma.rn.f32 	%f1123, %f235, %f1134, %f1123;
	fma.rn.f32 	%f1124, %f235, %f1135, %f1124;

BB0_187:
	mov.u64 	%rd234, GBufferAtten;
	cvta.global.u64 	%rd233, %rd234;
	mov.u32 	%r676, 12;
	mov.u32 	%r675, 2;
	abs.f32 	%f1021, %f1122;
	setp.gtu.f32	%p128, %f1021, 0f7F800000;
	selp.f32	%f1022, 0f00000000, %f1122, %p128;
	abs.f32 	%f1023, %f1123;
	setp.gtu.f32	%p129, %f1023, 0f7F800000;
	selp.f32	%f1024, 0f00000000, %f1123, %p129;
	abs.f32 	%f1025, %f1124;
	setp.gtu.f32	%p130, %f1025, 0f7F800000;
	selp.f32	%f1026, 0f00000000, %f1124, %p130;
	fma.rn.f32 	%f1148, %f1139, %f1022, %f1136;
	fma.rn.f32 	%f1149, %f1140, %f1024, %f1137;
	fma.rn.f32 	%f1150, %f1141, %f1026, %f1138;
	ld.global.v2.u32 	{%r631, %r632}, [pixelID];
	cvt.u64.u32	%rd183, %r631;
	cvt.u64.u32	%rd184, %r632;
	mov.u64 	%rd192, 0;
	// inline asm
	call (%rd181), _rt_buffer_get_64, (%rd233, %r675, %r676, %rd183, %rd184, %rd192, %rd192);
	// inline asm
	st.f32 	[%rd181+8], %f1141;
	st.f32 	[%rd181+4], %f1140;
	st.f32 	[%rd181], %f1139;
	ld.global.v2.u32 	{%r635, %r636}, [pixelID];
	cvt.u64.u32	%rd189, %r635;
	cvt.u64.u32	%rd190, %r636;
	mov.u64 	%rd194, accumBufferAdd;
	cvta.global.u64 	%rd188, %rd194;
	// inline asm
	call (%rd187), _rt_buffer_get_64, (%rd188, %r675, %r676, %rd189, %rd190, %rd192, %rd192);
	// inline asm
	ld.global.u32 	%r639, [bounceFlag];
	setp.eq.s32	%p131, %r639, 0;
	@%p131 bra 	BB0_189;

	ld.f32 	%f1027, [%rd187+8];
	ld.f32 	%f1028, [%rd187+4];
	ld.f32 	%f1029, [%rd187];
	add.f32 	%f1148, %f1148, %f1029;
	add.f32 	%f1149, %f1149, %f1028;
	add.f32 	%f1150, %f1150, %f1027;
	bra.uni 	BB0_194;

BB0_189:
	ld.global.u32 	%r215, [firstSkylight];
	setp.lt.s32	%p132, %r215, 0;
	setp.eq.s16	%p133, %rs13, 0;
	or.pred  	%p134, %p132, %p133;
	@%p134 bra 	BB0_194;

	cvt.s64.s32	%rd197, %r215;
	mov.u64 	%rd201, globalLights;
	cvta.global.u64 	%rd196, %rd201;
	mov.u32 	%r640, 1;
	mov.u32 	%r641, 32;
	// inline asm
	call (%rd195), _rt_buffer_get_64, (%rd196, %r640, %r641, %rd197, %rd192, %rd192, %rd192);
	// inline asm
	ld.f32 	%f345, [%rd195+28];
	ld.f32 	%f344, [%rd195+24];
	ld.f32 	%f343, [%rd195+20];
	ld.f32 	%f340, [%rd195+8];
	ld.f32 	%f339, [%rd195+4];
	ld.f32 	%f342, [%rd195+16];
	setp.eq.f32	%p135, %f342, 0f00000000;
	setp.gt.f32	%p136, %f63, 0f00000000;
	or.pred  	%p137, %p135, %p136;
	@!%p137 bra 	BB0_194;
	bra.uni 	BB0_191;

BB0_191:
	mov.f32 	%f1145, 0f3F800000;
	setp.leu.f32	%p138, %f339, 0f00000000;
	mov.f32 	%f1146, %f1145;
	mov.f32 	%f1147, %f1145;
	@%p138 bra 	BB0_193;

	cvt.rzi.s32.f32	%r642, %f340;
	neg.f32 	%f1039, %f62;
	neg.f32 	%f1038, %f63;
	neg.f32 	%f1037, %f64;
	mov.u32 	%r643, 6;
	mov.u32 	%r644, 0;
	// inline asm
	call (%f1147, %f1146, %f1145, %f1036), _rt_texture_get_base_id, (%r642, %r643, %f1037, %f1038, %f1039, %r644);
	// inline asm

BB0_193:
	mul.f32 	%f1148, %f343, %f1147;
	mul.f32 	%f1149, %f344, %f1146;
	mul.f32 	%f1150, %f345, %f1145;

BB0_194:
	mov.u32 	%r678, 12;
	mov.u32 	%r677, 2;
	ld.global.v2.u32 	{%r649, %r650}, [pixelID];
	cvt.u64.u32	%rd204, %r649;
	cvt.u64.u32	%rd205, %r650;
	// inline asm
	call (%rd202), _rt_buffer_get_64, (%rd188, %r677, %r678, %rd204, %rd205, %rd192, %rd192);
	// inline asm
	st.f32 	[%rd202+8], %f1150;
	st.f32 	[%rd202+4], %f1149;
	st.f32 	[%rd202], %f1148;
	ld.global.v2.u32 	{%r653, %r654}, [pixelID];
	cvt.u64.u32	%rd210, %r653;
	cvt.u64.u32	%rd211, %r654;
	mov.u64 	%rd215, accumBufferLerp;
	cvta.global.u64 	%rd209, %rd215;
	// inline asm
	call (%rd208), _rt_buffer_get_64, (%rd209, %r677, %r678, %rd210, %rd211, %rd192, %rd192);
	// inline asm
	ld.f32 	%f1040, [%rd208+8];
	ld.f32 	%f1041, [%rd208+4];
	ld.f32 	%f1042, [%rd208];
	sub.f32 	%f1043, %f1148, %f1042;
	sub.f32 	%f1044, %f1149, %f1041;
	sub.f32 	%f1045, %f1150, %f1040;
	ld.global.f32 	%f1046, [integration];
	fma.rn.f32 	%f358, %f1046, %f1043, %f1042;
	fma.rn.f32 	%f359, %f1046, %f1044, %f1041;
	fma.rn.f32 	%f360, %f1046, %f1045, %f1040;
	ld.global.u32 	%r657, [finalBounceFlag];
	setp.eq.s32	%p139, %r657, 0;
	@%p139 bra 	BB0_196;

	mov.u32 	%r680, 12;
	mov.u32 	%r679, 2;
	ld.global.v2.u32 	{%r660, %r661}, [pixelID];
	cvt.u64.u32	%rd218, %r660;
	cvt.u64.u32	%rd219, %r661;
	// inline asm
	call (%rd216), _rt_buffer_get_64, (%rd209, %r679, %r680, %rd218, %rd219, %rd192, %rd192);
	// inline asm
	st.f32 	[%rd216+8], %f360;
	st.f32 	[%rd216+4], %f359;
	st.f32 	[%rd216], %f358;

BB0_196:
	mov.u32 	%r681, 2;
	ld.global.u32 	%r666, [resolution+4];
	add.s32 	%r667, %r666, -1;
	ld.global.v2.u32 	{%r668, %r669}, [pixelID];
	sub.s32 	%r672, %r667, %r669;
	ld.global.f32 	%f1047, [cameraExp];
	cvt.u64.u32	%rd225, %r668;
	cvt.u64.u32	%rd226, %r672;
	mov.u64 	%rd229, colorOutput;
	cvta.global.u64 	%rd224, %rd229;
	mov.u32 	%r665, 16;
	// inline asm
	call (%rd223), _rt_buffer_get_64, (%rd224, %r681, %r665, %rd225, %rd226, %rd192, %rd192);
	// inline asm
	mul.f32 	%f1048, %f360, %f1047;
	mul.f32 	%f1049, %f359, %f1047;
	mul.f32 	%f1050, %f358, %f1047;
	mov.f32 	%f1051, 0f3F800000;
	st.v4.f32 	[%rd223], {%f1050, %f1049, %f1048, %f1051};
	ret;
}


